//
// Generated by LLVM NVPTX Back-End
//

.version 8.0
.target sm_90a
.address_size 64

	// .globl	_kernel_matmul_fp8_block_fastacc
.extern .shared .align 16 .b8 global_smem[];

.visible .entry _kernel_matmul_fp8_block_fastacc(
	.param .u64 _kernel_matmul_fp8_block_fastacc_param_0,
	.param .u64 _kernel_matmul_fp8_block_fastacc_param_1,
	.param .u64 _kernel_matmul_fp8_block_fastacc_param_2,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_3,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_4,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_5,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_6,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_7,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_8,
	.param .u64 _kernel_matmul_fp8_block_fastacc_param_9,
	.param .u64 _kernel_matmul_fp8_block_fastacc_param_10,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_11,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_12,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_13,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_14,
	.param .u32 _kernel_matmul_fp8_block_fastacc_param_15
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<111>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<655>;
	.reg .f32 	%f<2080>;
	.reg .b64 	%rd<202>;
	.loc	1 1114 0
$L__func_begin0:
	.loc	1 1114 0

	ld.param.u32 	%r46, [_kernel_matmul_fp8_block_fastacc_param_13];
	ld.param.u32 	%r45, [_kernel_matmul_fp8_block_fastacc_param_4];
	ld.param.u32 	%r44, [_kernel_matmul_fp8_block_fastacc_param_3];
	ld.param.u64 	%rd23, [_kernel_matmul_fp8_block_fastacc_param_2];
	ld.param.u64 	%rd22, [_kernel_matmul_fp8_block_fastacc_param_1];
	ld.param.u64 	%rd21, [_kernel_matmul_fp8_block_fastacc_param_0];
$L__tmp0:
	.loc	1 1198 24
	// begin inline asm
	mov.u32 %r47, %ctaid.x;
	// end inline asm
	.loc	1 1199 26
	// begin inline asm
	mov.u32 %r48, %ctaid.y;
	// end inline asm
$L__tmp1:
	.loc	2 44 22
	add.s32 	%r145, %r44, 127;
	.loc	2 44 28
	shr.s32 	%r146, %r145, 31;
	shr.u32 	%r147, %r146, 25;
	add.s32 	%r148, %r145, %r147;
	shr.s32 	%r149, %r148, 7;
$L__tmp2:
	.loc	2 44 22
	add.s32 	%r150, %r45, 127;
	ld.param.u32 	%r151, [_kernel_matmul_fp8_block_fastacc_param_5];
	.loc	2 44 28
	shr.s32 	%r152, %r150, 31;
	shr.u32 	%r153, %r152, 25;
	add.s32 	%r154, %r150, %r153;
	shr.s32 	%r155, %r154, 7;
$L__tmp3:
	.loc	1 1204 22
	shl.b32 	%r157, %r155, 3;
	.loc	1 1205 22
	div.s32 	%r158, %r47, %r157;
	.loc	1 1206 41
	shl.b32 	%r159, %r158, 3;
	ld.param.u32 	%r160, [_kernel_matmul_fp8_block_fastacc_param_11];
	.loc	1 1206 30
	sub.s32 	%r161, %r149, %r159;
	ld.param.u32 	%r162, [_kernel_matmul_fp8_block_fastacc_param_12];
	.loc	1 1206 50
	min.s32 	%r163, %r161, 8;
	.loc	1 1207 40
	rem.s32 	%r164, %r47, %r163;
	.loc	1 1207 34
	add.s32 	%r166, %r159, %r164;
	mul.lo.s32 	%r168, %r158, %r157;
	sub.s32 	%r169, %r47, %r168;
	.loc	1 1208 30
	div.s32 	%r170, %r169, %r163;
	.loc	1 1210 17
	shl.b32 	%r2, %r166, 7;
	.loc	1 1210 40
	mov.u32 	%r3, %tid.x;
	shr.u32 	%r4, %r3, 5;
	bfe.u32 	%r171, %r3, 3, 4;
	or.b32  	%r172, %r171, 16;
	or.b32  	%r173, %r171, 32;
	or.b32  	%r174, %r171, 48;
	or.b32  	%r175, %r171, 64;
	or.b32  	%r176, %r171, 80;
	or.b32  	%r177, %r171, 96;
	or.b32  	%r178, %r171, 112;
	shl.b32 	%r179, %r3, 4;
	and.b32  	%r5, %r179, 112;
	.loc	1 1210 27
	or.b32  	%r180, %r2, %r171;
	or.b32  	%r181, %r2, %r172;
	or.b32  	%r182, %r2, %r173;
	or.b32  	%r183, %r2, %r174;
	or.b32  	%r184, %r2, %r175;
	or.b32  	%r185, %r2, %r176;
	or.b32  	%r186, %r2, %r177;
	or.b32  	%r187, %r2, %r178;
	.loc	1 1211 17
	shl.b32 	%r6, %r170, 7;
	.loc	1 1211 27
	or.b32  	%r188, %r6, %r171;
	or.b32  	%r189, %r6, %r172;
	or.b32  	%r190, %r6, %r173;
	or.b32  	%r191, %r6, %r174;
	or.b32  	%r192, %r6, %r175;
	or.b32  	%r193, %r6, %r176;
	or.b32  	%r194, %r6, %r177;
	or.b32  	%r195, %r6, %r178;
	.loc	1 1212 48
	rem.s32 	%r196, %r180, %r44;
	rem.s32 	%r197, %r181, %r44;
	rem.s32 	%r198, %r182, %r44;
	rem.s32 	%r199, %r183, %r44;
	rem.s32 	%r200, %r184, %r44;
	rem.s32 	%r201, %r185, %r44;
	rem.s32 	%r202, %r186, %r44;
	rem.s32 	%r203, %r187, %r44;
	.loc	1 1213 48
	rem.s32 	%r204, %r188, %r45;
	rem.s32 	%r205, %r189, %r45;
	rem.s32 	%r206, %r190, %r45;
	rem.s32 	%r207, %r191, %r45;
	rem.s32 	%r208, %r192, %r45;
	rem.s32 	%r209, %r193, %r45;
	rem.s32 	%r210, %r194, %r45;
	rem.s32 	%r211, %r195, %r45;
	.loc	1 1214 17
	shl.b32 	%r7, %r48, 7;
	.loc	1 1214 27
	or.b32  	%r212, %r7, %r5;
	.loc	1 1216 28
	mul.lo.s32 	%r8, %r196, %r160;
	mul.lo.s32 	%r9, %r197, %r160;
	mul.lo.s32 	%r10, %r198, %r160;
	mul.lo.s32 	%r11, %r199, %r160;
	mul.lo.s32 	%r12, %r200, %r160;
	mul.lo.s32 	%r13, %r201, %r160;
	mul.lo.s32 	%r14, %r202, %r160;
	mul.lo.s32 	%r15, %r203, %r160;
	.loc	1 1216 40
	add.s32 	%r213, %r8, %r212;
	add.s32 	%r214, %r9, %r212;
	add.s32 	%r215, %r10, %r212;
	add.s32 	%r216, %r11, %r212;
	add.s32 	%r217, %r12, %r212;
	add.s32 	%r218, %r13, %r212;
	add.s32 	%r219, %r14, %r212;
	add.s32 	%r220, %r15, %r212;
	.loc	1 1216 13
	cvt.s64.s32 	%rd74, %r213;
	add.s64 	%rd24, %rd21, %rd74;
	cvt.s64.s32 	%rd75, %r214;
	add.s64 	%rd25, %rd21, %rd75;
	cvt.s64.s32 	%rd76, %r215;
	add.s64 	%rd26, %rd21, %rd76;
	cvt.s64.s32 	%rd77, %r216;
	add.s64 	%rd27, %rd21, %rd77;
	cvt.s64.s32 	%rd78, %r217;
	add.s64 	%rd28, %rd21, %rd78;
	cvt.s64.s32 	%rd79, %r218;
	add.s64 	%rd29, %rd21, %rd79;
	cvt.s64.s32 	%rd80, %r219;
	add.s64 	%rd30, %rd21, %rd80;
	cvt.s64.s32 	%rd81, %r220;
	add.s64 	%rd31, %rd21, %rd81;
	.loc	1 1217 54
	mul.lo.s32 	%r16, %r204, %r162;
	mul.lo.s32 	%r17, %r205, %r162;
	mul.lo.s32 	%r18, %r206, %r162;
	mul.lo.s32 	%r19, %r207, %r162;
	mul.lo.s32 	%r20, %r208, %r162;
	mul.lo.s32 	%r21, %r209, %r162;
	mul.lo.s32 	%r22, %r210, %r162;
	mul.lo.s32 	%r23, %r211, %r162;
	.loc	1 1217 39
	add.s32 	%r221, %r16, %r212;
	add.s32 	%r222, %r17, %r212;
	add.s32 	%r223, %r18, %r212;
	add.s32 	%r224, %r19, %r212;
	add.s32 	%r225, %r20, %r212;
	add.s32 	%r226, %r21, %r212;
	add.s32 	%r227, %r22, %r212;
	add.s32 	%r228, %r23, %r212;
	.loc	1 1217 13
	cvt.s64.s32 	%rd82, %r221;
	add.s64 	%rd32, %rd22, %rd82;
	cvt.s64.s32 	%rd83, %r222;
	add.s64 	%rd33, %rd22, %rd83;
	cvt.s64.s32 	%rd84, %r223;
	add.s64 	%rd34, %rd22, %rd84;
	cvt.s64.s32 	%rd85, %r224;
	add.s64 	%rd35, %rd22, %rd85;
	cvt.s64.s32 	%rd86, %r225;
	add.s64 	%rd36, %rd22, %rd86;
	cvt.s64.s32 	%rd87, %r226;
	add.s64 	%rd37, %rd22, %rd87;
	cvt.s64.s32 	%rd88, %r227;
	add.s64 	%rd38, %rd22, %rd88;
	cvt.s64.s32 	%rd89, %r228;
	add.s64 	%rd39, %rd22, %rd89;
$L__tmp4:
	.loc	2 44 22
	add.s32 	%r231, %r151, 127;
$L__tmp5:
	.loc	1 1224 22
	setp.lt.s32 	%p49, %r231, 128;
	setp.gt.s32 	%p50, %r231, 127;
	.loc	1 1227 24
	shl.b32 	%r237, %r171, 7;
	shl.b32 	%r25, %r3, 1;
	xor.b32  	%r238, %r179, %r25;
	and.b32  	%r239, %r238, 112;
	or.b32  	%r26, %r237, %r239;
	mov.u32 	%r240, global_smem;
	add.s32 	%r49, %r240, %r26;
	shl.b32 	%r241, %r172, 7;
	or.b32  	%r27, %r241, %r239;
	add.s32 	%r51, %r240, %r27;
	shl.b32 	%r242, %r173, 7;
	or.b32  	%r28, %r242, %r239;
	add.s32 	%r53, %r240, %r28;
	shl.b32 	%r243, %r174, 7;
	or.b32  	%r29, %r243, %r239;
	add.s32 	%r55, %r240, %r29;
	shl.b32 	%r244, %r175, 7;
	or.b32  	%r30, %r244, %r239;
	add.s32 	%r57, %r240, %r30;
	shl.b32 	%r245, %r176, 7;
	or.b32  	%r31, %r245, %r239;
	add.s32 	%r59, %r240, %r31;
	shl.b32 	%r246, %r177, 7;
	or.b32  	%r32, %r246, %r239;
	add.s32 	%r61, %r240, %r32;
	shl.b32 	%r247, %r178, 7;
	or.b32  	%r33, %r247, %r239;
	add.s32 	%r63, %r240, %r33;
	selp.b32 	%r50, 16, 0, %p50;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r49 + 0 ], [ %rd24 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r51 + 0 ], [ %rd25 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r53 + 0 ], [ %rd26 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r55 + 0 ], [ %rd27 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r57 + 0 ], [ %rd28 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r59 + 0 ], [ %rd29 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r61 + 0 ], [ %rd30 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r63 + 0 ], [ %rd31 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 1228 24
	add.s32 	%r248, %r240, 65536;
	add.s32 	%r65, %r248, %r26;
	add.s32 	%r67, %r248, %r27;
	add.s32 	%r69, %r248, %r28;
	add.s32 	%r71, %r248, %r29;
	add.s32 	%r73, %r248, %r30;
	add.s32 	%r75, %r248, %r31;
	add.s32 	%r77, %r248, %r32;
	add.s32 	%r79, %r248, %r33;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r65 + 0 ], [ %rd32 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r67 + 0 ], [ %rd33 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r69 + 0 ], [ %rd34 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r71 + 0 ], [ %rd35 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r73 + 0 ], [ %rd36 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r75 + 0 ], [ %rd37 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r77 + 0 ], [ %rd38 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r79 + 0 ], [ %rd39 + 0 ], 0x10, %r50;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 1224 22
	setp.gt.s32 	%p51, %r231, 255;
	.loc	1 1240 13
	add.s64 	%rd40, %rd24, 128;
	add.s64 	%rd41, %rd25, 128;
	add.s64 	%rd42, %rd26, 128;
	add.s64 	%rd43, %rd27, 128;
	add.s64 	%rd44, %rd28, 128;
	add.s64 	%rd45, %rd29, 128;
	add.s64 	%rd46, %rd30, 128;
	add.s64 	%rd47, %rd31, 128;
	.loc	1 1241 13
	add.s64 	%rd48, %rd32, 128;
	add.s64 	%rd49, %rd33, 128;
	add.s64 	%rd50, %rd34, 128;
	add.s64 	%rd51, %rd35, 128;
	add.s64 	%rd52, %rd36, 128;
	add.s64 	%rd53, %rd37, 128;
	add.s64 	%rd54, %rd38, 128;
	add.s64 	%rd55, %rd39, 128;
	.loc	1 1227 24
	bar.sync 	0;
	add.s32 	%r249, %r240, 16384;
	add.s32 	%r81, %r249, %r26;
	add.s32 	%r83, %r249, %r27;
	add.s32 	%r85, %r249, %r28;
	add.s32 	%r87, %r249, %r29;
	add.s32 	%r89, %r249, %r30;
	add.s32 	%r91, %r249, %r31;
	add.s32 	%r93, %r249, %r32;
	add.s32 	%r95, %r249, %r33;
	selp.b32 	%r82, 16, 0, %p51;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r81 + 0 ], [ %rd40 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r83 + 0 ], [ %rd41 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r85 + 0 ], [ %rd42 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r87 + 0 ], [ %rd43 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r89 + 0 ], [ %rd44 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r91 + 0 ], [ %rd45 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r93 + 0 ], [ %rd46 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r95 + 0 ], [ %rd47 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 1228 24
	add.s32 	%r250, %r240, 81920;
	add.s32 	%r97, %r250, %r26;
	add.s32 	%r99, %r250, %r27;
	add.s32 	%r101, %r250, %r28;
	add.s32 	%r103, %r250, %r29;
	add.s32 	%r105, %r250, %r30;
	add.s32 	%r107, %r250, %r31;
	add.s32 	%r109, %r250, %r32;
	add.s32 	%r111, %r250, %r33;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r97 + 0 ], [ %rd48 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r99 + 0 ], [ %rd49 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r101 + 0 ], [ %rd50 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r103 + 0 ], [ %rd51 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r105 + 0 ], [ %rd52 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r107 + 0 ], [ %rd53 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r109 + 0 ], [ %rd54 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r111 + 0 ], [ %rd55 + 0 ], 0x10, %r82;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 1224 22
	setp.gt.s32 	%p52, %r231, 383;
	.loc	1 1240 13
	add.s64 	%rd56, %rd24, 256;
	add.s64 	%rd57, %rd25, 256;
	add.s64 	%rd58, %rd26, 256;
	add.s64 	%rd59, %rd27, 256;
	add.s64 	%rd60, %rd28, 256;
	add.s64 	%rd61, %rd29, 256;
	add.s64 	%rd62, %rd30, 256;
	add.s64 	%rd63, %rd31, 256;
	.loc	1 1241 13
	add.s64 	%rd64, %rd32, 256;
	add.s64 	%rd65, %rd33, 256;
	add.s64 	%rd66, %rd34, 256;
	add.s64 	%rd67, %rd35, 256;
	add.s64 	%rd68, %rd36, 256;
	add.s64 	%rd69, %rd37, 256;
	add.s64 	%rd70, %rd38, 256;
	add.s64 	%rd71, %rd39, 256;
	.loc	1 1227 24
	bar.sync 	0;
	add.s32 	%r251, %r240, 32768;
	add.s32 	%r113, %r251, %r26;
	add.s32 	%r115, %r251, %r27;
	add.s32 	%r117, %r251, %r28;
	add.s32 	%r119, %r251, %r29;
	add.s32 	%r121, %r251, %r30;
	add.s32 	%r123, %r251, %r31;
	add.s32 	%r125, %r251, %r32;
	add.s32 	%r127, %r251, %r33;
	selp.b32 	%r114, 16, 0, %p52;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r113 + 0 ], [ %rd56 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r115 + 0 ], [ %rd57 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r117 + 0 ], [ %rd58 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r119 + 0 ], [ %rd59 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r121 + 0 ], [ %rd60 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r123 + 0 ], [ %rd61 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r125 + 0 ], [ %rd62 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r127 + 0 ], [ %rd63 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 1228 24
	add.s32 	%r252, %r240, 98304;
	add.s32 	%r129, %r252, %r26;
	add.s32 	%r131, %r252, %r27;
	add.s32 	%r133, %r252, %r28;
	add.s32 	%r135, %r252, %r29;
	add.s32 	%r137, %r252, %r30;
	add.s32 	%r139, %r252, %r31;
	add.s32 	%r141, %r252, %r32;
	add.s32 	%r143, %r252, %r33;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r129 + 0 ], [ %rd64 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r131 + 0 ], [ %rd65 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r133 + 0 ], [ %rd66 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r135 + 0 ], [ %rd67 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r137 + 0 ], [ %rd68 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r139 + 0 ], [ %rd69 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r141 + 0 ], [ %rd70 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r143 + 0 ], [ %rd71 + 0 ], 0x10, %r114;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	mov.f32 	%f1823, 0f00000000;
	mov.f32 	%f1824, %f1823;
	mov.f32 	%f1825, %f1823;
	mov.f32 	%f1826, %f1823;
	mov.f32 	%f1827, %f1823;
	mov.f32 	%f1828, %f1823;
	mov.f32 	%f1829, %f1823;
	mov.f32 	%f1830, %f1823;
	mov.f32 	%f1831, %f1823;
	mov.f32 	%f1832, %f1823;
	mov.f32 	%f1833, %f1823;
	mov.f32 	%f1834, %f1823;
	mov.f32 	%f1835, %f1823;
	mov.f32 	%f1836, %f1823;
	mov.f32 	%f1837, %f1823;
	mov.f32 	%f1838, %f1823;
	mov.f32 	%f1839, %f1823;
	mov.f32 	%f1840, %f1823;
	mov.f32 	%f1841, %f1823;
	mov.f32 	%f1842, %f1823;
	mov.f32 	%f1843, %f1823;
	mov.f32 	%f1844, %f1823;
	mov.f32 	%f1845, %f1823;
	mov.f32 	%f1846, %f1823;
	mov.f32 	%f1847, %f1823;
	mov.f32 	%f1848, %f1823;
	mov.f32 	%f1849, %f1823;
	mov.f32 	%f1850, %f1823;
	mov.f32 	%f1851, %f1823;
	mov.f32 	%f1852, %f1823;
	mov.f32 	%f1853, %f1823;
	mov.f32 	%f1854, %f1823;
	mov.f32 	%f1855, %f1823;
	mov.f32 	%f1856, %f1823;
	mov.f32 	%f1857, %f1823;
	mov.f32 	%f1858, %f1823;
	mov.f32 	%f1859, %f1823;
	mov.f32 	%f1860, %f1823;
	mov.f32 	%f1861, %f1823;
	mov.f32 	%f1862, %f1823;
	mov.f32 	%f1863, %f1823;
	mov.f32 	%f1864, %f1823;
	mov.f32 	%f1865, %f1823;
	mov.f32 	%f1866, %f1823;
	mov.f32 	%f1867, %f1823;
	mov.f32 	%f1868, %f1823;
	mov.f32 	%f1869, %f1823;
	mov.f32 	%f1870, %f1823;
	mov.f32 	%f1871, %f1823;
	mov.f32 	%f1872, %f1823;
	mov.f32 	%f1873, %f1823;
	mov.f32 	%f1874, %f1823;
	mov.f32 	%f1875, %f1823;
	mov.f32 	%f1876, %f1823;
	mov.f32 	%f1877, %f1823;
	mov.f32 	%f1878, %f1823;
	mov.f32 	%f1879, %f1823;
	mov.f32 	%f1880, %f1823;
	mov.f32 	%f1881, %f1823;
	mov.f32 	%f1882, %f1823;
	mov.f32 	%f1883, %f1823;
	mov.f32 	%f1884, %f1823;
	mov.f32 	%f1885, %f1823;
	mov.f32 	%f1886, %f1823;
	mov.f32 	%f1887, %f1823;
	mov.f32 	%f1888, %f1823;
	mov.f32 	%f1889, %f1823;
	mov.f32 	%f1890, %f1823;
	mov.f32 	%f1891, %f1823;
	mov.f32 	%f1892, %f1823;
	mov.f32 	%f1893, %f1823;
	mov.f32 	%f1894, %f1823;
	mov.f32 	%f1895, %f1823;
	mov.f32 	%f1896, %f1823;
	mov.f32 	%f1897, %f1823;
	mov.f32 	%f1898, %f1823;
	mov.f32 	%f1899, %f1823;
	mov.f32 	%f1900, %f1823;
	mov.f32 	%f1901, %f1823;
	mov.f32 	%f1902, %f1823;
	mov.f32 	%f1903, %f1823;
	mov.f32 	%f1904, %f1823;
	mov.f32 	%f1905, %f1823;
	mov.f32 	%f1906, %f1823;
	mov.f32 	%f1907, %f1823;
	mov.f32 	%f1908, %f1823;
	mov.f32 	%f1909, %f1823;
	mov.f32 	%f1910, %f1823;
	mov.f32 	%f1911, %f1823;
	mov.f32 	%f1912, %f1823;
	mov.f32 	%f1913, %f1823;
	mov.f32 	%f1914, %f1823;
	mov.f32 	%f1915, %f1823;
	mov.f32 	%f1916, %f1823;
	mov.f32 	%f1917, %f1823;
	mov.f32 	%f1918, %f1823;
	mov.f32 	%f1919, %f1823;
	mov.f32 	%f1920, %f1823;
	mov.f32 	%f1921, %f1823;
	mov.f32 	%f1922, %f1823;
	mov.f32 	%f1923, %f1823;
	mov.f32 	%f1924, %f1823;
	mov.f32 	%f1925, %f1823;
	mov.f32 	%f1926, %f1823;
	mov.f32 	%f1927, %f1823;
	mov.f32 	%f1928, %f1823;
	mov.f32 	%f1929, %f1823;
	mov.f32 	%f1930, %f1823;
	mov.f32 	%f1931, %f1823;
	mov.f32 	%f1932, %f1823;
	mov.f32 	%f1933, %f1823;
	mov.f32 	%f1934, %f1823;
	mov.f32 	%f1935, %f1823;
	mov.f32 	%f1936, %f1823;
	mov.f32 	%f1937, %f1823;
	mov.f32 	%f1938, %f1823;
	mov.f32 	%f1939, %f1823;
	mov.f32 	%f1940, %f1823;
	mov.f32 	%f1941, %f1823;
	mov.f32 	%f1942, %f1823;
	mov.f32 	%f1943, %f1823;
	mov.f32 	%f1944, %f1823;
	mov.f32 	%f1945, %f1823;
	mov.f32 	%f1946, %f1823;
	mov.f32 	%f1947, %f1823;
	mov.f32 	%f1948, %f1823;
	mov.f32 	%f1949, %f1823;
	mov.f32 	%f1950, %f1823;
	.loc	1 1224 22
	@%p49 bra 	$L__BB0_5;
	.loc	1 0 22
	ld.param.u64 	%rd72, [_kernel_matmul_fp8_block_fastacc_param_9];
	ld.param.u64 	%rd73, [_kernel_matmul_fp8_block_fastacc_param_10];
	ld.param.u32 	%r165, [_kernel_matmul_fp8_block_fastacc_param_14];
	ld.param.u32 	%r167, [_kernel_matmul_fp8_block_fastacc_param_15];
	bfe.s32 	%r229, %r166, 0, 25;
	bfe.s32 	%r230, %r170, 0, 25;
	shr.s32 	%r232, %r231, 31;
	shr.u32 	%r233, %r232, 25;
	add.s32 	%r234, %r231, %r233;
	shr.s32 	%r24, %r234, 7;
	mul.lo.s32 	%r235, %r229, %r165;
	mul.wide.s32 	%rd90, %r235, 4;
	add.s64 	%rd1, %rd72, %rd90;
	mul.lo.s32 	%r236, %r230, %r167;
	mul.wide.s32 	%rd91, %r236, 4;
	add.s64 	%rd2, %rd73, %rd91;
	add.s32 	%r34, %r24, -3;
	and.b32  	%r35, %r4, 134217724;
	.loc	1 1224 22
	add.s32 	%r256, %r23, %r7;
	add.s32 	%r257, %r256, %r5;
	cvt.s64.s32 	%rd93, %r257;
	add.s64 	%rd94, %rd93, %rd22;
	add.s64 	%rd3, %rd94, 384;
	add.s32 	%r258, %r22, %r7;
	add.s32 	%r259, %r258, %r5;
	cvt.s64.s32 	%rd95, %r259;
	add.s64 	%rd96, %rd95, %rd22;
	add.s64 	%rd4, %rd96, 384;
	add.s32 	%r260, %r21, %r7;
	add.s32 	%r261, %r260, %r5;
	cvt.s64.s32 	%rd97, %r261;
	add.s64 	%rd98, %rd97, %rd22;
	add.s64 	%rd5, %rd98, 384;
	add.s32 	%r262, %r20, %r7;
	add.s32 	%r263, %r262, %r5;
	cvt.s64.s32 	%rd99, %r263;
	add.s64 	%rd100, %rd99, %rd22;
	add.s64 	%rd6, %rd100, 384;
	add.s32 	%r264, %r19, %r7;
	add.s32 	%r265, %r264, %r5;
	cvt.s64.s32 	%rd101, %r265;
	add.s64 	%rd102, %rd101, %rd22;
	add.s64 	%rd7, %rd102, 384;
	add.s32 	%r266, %r18, %r7;
	add.s32 	%r267, %r266, %r5;
	cvt.s64.s32 	%rd103, %r267;
	add.s64 	%rd104, %rd103, %rd22;
	add.s64 	%rd8, %rd104, 384;
	add.s32 	%r268, %r17, %r7;
	add.s32 	%r269, %r268, %r5;
	cvt.s64.s32 	%rd105, %r269;
	add.s64 	%rd106, %rd105, %rd22;
	add.s64 	%rd9, %rd106, 384;
	add.s32 	%r270, %r16, %r7;
	add.s32 	%r271, %r270, %r5;
	cvt.s64.s32 	%rd107, %r271;
	add.s64 	%rd108, %rd107, %rd22;
	add.s64 	%rd10, %rd108, 384;
	add.s32 	%r272, %r15, %r7;
	add.s32 	%r273, %r272, %r5;
	cvt.s64.s32 	%rd109, %r273;
	add.s64 	%rd110, %rd109, %rd21;
	add.s64 	%rd11, %rd110, 384;
	add.s32 	%r274, %r14, %r7;
	add.s32 	%r275, %r274, %r5;
	cvt.s64.s32 	%rd111, %r275;
	add.s64 	%rd112, %rd111, %rd21;
	add.s64 	%rd12, %rd112, 384;
	add.s32 	%r276, %r13, %r7;
	add.s32 	%r277, %r276, %r5;
	cvt.s64.s32 	%rd113, %r277;
	add.s64 	%rd114, %rd113, %rd21;
	add.s64 	%rd13, %rd114, 384;
	add.s32 	%r278, %r12, %r7;
	add.s32 	%r279, %r278, %r5;
	cvt.s64.s32 	%rd115, %r279;
	add.s64 	%rd116, %rd115, %rd21;
	add.s64 	%rd14, %rd116, 384;
	add.s32 	%r280, %r11, %r7;
	add.s32 	%r281, %r280, %r5;
	cvt.s64.s32 	%rd117, %r281;
	add.s64 	%rd118, %rd117, %rd21;
	add.s64 	%rd15, %rd118, 384;
	add.s32 	%r282, %r10, %r7;
	add.s32 	%r283, %r282, %r5;
	cvt.s64.s32 	%rd119, %r283;
	add.s64 	%rd120, %rd119, %rd21;
	add.s64 	%rd16, %rd120, 384;
	add.s32 	%r284, %r9, %r7;
	add.s32 	%r285, %r284, %r5;
	cvt.s64.s32 	%rd121, %r285;
	add.s64 	%rd122, %rd121, %rd21;
	add.s64 	%rd17, %rd122, 384;
	add.s32 	%r286, %r8, %r7;
	add.s32 	%r287, %r286, %r5;
	cvt.s64.s32 	%rd123, %r287;
	add.s64 	%rd124, %rd123, %rd21;
	add.s64 	%rd18, %rd124, 384;
	add.s32 	%r36, %r24, -1;
	mov.b32 	%r654, 0;
	mov.f32 	%f1811, 0f00000000;
	mov.b32 	%r653, 2;
	mov.b32 	%r652, -1;
	mov.u64 	%rd201, 0;
	mov.f32 	%f1810, 0f00000001;
	mov.f32 	%f1809, 0f00000080;
	mov.f32 	%f1823, %f1811;
	mov.f32 	%f1824, %f1811;
	mov.f32 	%f1825, %f1811;
	mov.f32 	%f1826, %f1811;
	mov.f32 	%f1827, %f1811;
	mov.f32 	%f1828, %f1811;
	mov.f32 	%f1829, %f1811;
	mov.f32 	%f1830, %f1811;
	mov.f32 	%f1831, %f1811;
	mov.f32 	%f1832, %f1811;
	mov.f32 	%f1833, %f1811;
	mov.f32 	%f1834, %f1811;
	mov.f32 	%f1835, %f1811;
	mov.f32 	%f1836, %f1811;
	mov.f32 	%f1837, %f1811;
	mov.f32 	%f1838, %f1811;
	mov.f32 	%f1839, %f1811;
	mov.f32 	%f1840, %f1811;
	mov.f32 	%f1841, %f1811;
	mov.f32 	%f1842, %f1811;
	mov.f32 	%f1843, %f1811;
	mov.f32 	%f1844, %f1811;
	mov.f32 	%f1845, %f1811;
	mov.f32 	%f1846, %f1811;
	mov.f32 	%f1847, %f1811;
	mov.f32 	%f1848, %f1811;
	mov.f32 	%f1849, %f1811;
	mov.f32 	%f1850, %f1811;
	mov.f32 	%f1851, %f1811;
	mov.f32 	%f1852, %f1811;
	mov.f32 	%f1853, %f1811;
	mov.f32 	%f1854, %f1811;
	mov.f32 	%f1855, %f1811;
	mov.f32 	%f1856, %f1811;
	mov.f32 	%f1857, %f1811;
	mov.f32 	%f1858, %f1811;
	mov.f32 	%f1859, %f1811;
	mov.f32 	%f1860, %f1811;
	mov.f32 	%f1861, %f1811;
	mov.f32 	%f1862, %f1811;
	mov.f32 	%f1863, %f1811;
	mov.f32 	%f1864, %f1811;
	mov.f32 	%f1865, %f1811;
	mov.f32 	%f1866, %f1811;
	mov.f32 	%f1867, %f1811;
	mov.f32 	%f1868, %f1811;
	mov.f32 	%f1869, %f1811;
	mov.f32 	%f1870, %f1811;
	mov.f32 	%f1871, %f1811;
	mov.f32 	%f1872, %f1811;
	mov.f32 	%f1873, %f1811;
	mov.f32 	%f1874, %f1811;
	mov.f32 	%f1875, %f1811;
	mov.f32 	%f1876, %f1811;
	mov.f32 	%f1877, %f1811;
	mov.f32 	%f1878, %f1811;
	mov.f32 	%f1879, %f1811;
	mov.f32 	%f1880, %f1811;
	mov.f32 	%f1881, %f1811;
	mov.f32 	%f1882, %f1811;
	mov.f32 	%f1883, %f1811;
	mov.f32 	%f1884, %f1811;
	mov.f32 	%f1885, %f1811;
	mov.f32 	%f1886, %f1811;
	mov.f32 	%f1887, %f1811;
	mov.f32 	%f1888, %f1811;
	mov.f32 	%f1889, %f1811;
	mov.f32 	%f1890, %f1811;
	mov.f32 	%f1891, %f1811;
	mov.f32 	%f1892, %f1811;
	mov.f32 	%f1893, %f1811;
	mov.f32 	%f1894, %f1811;
	mov.f32 	%f1895, %f1811;
	mov.f32 	%f1896, %f1811;
	mov.f32 	%f1897, %f1811;
	mov.f32 	%f1898, %f1811;
	mov.f32 	%f1899, %f1811;
	mov.f32 	%f1900, %f1811;
	mov.f32 	%f1901, %f1811;
	mov.f32 	%f1902, %f1811;
	mov.f32 	%f1903, %f1811;
	mov.f32 	%f1904, %f1811;
	mov.f32 	%f1905, %f1811;
	mov.f32 	%f1906, %f1811;
	mov.f32 	%f1907, %f1811;
	mov.f32 	%f1908, %f1811;
	mov.f32 	%f1909, %f1811;
	mov.f32 	%f1910, %f1811;
	mov.f32 	%f1911, %f1811;
	mov.f32 	%f1912, %f1811;
	mov.f32 	%f1913, %f1811;
	mov.f32 	%f1914, %f1811;
	mov.f32 	%f1915, %f1811;
	mov.f32 	%f1916, %f1811;
	mov.f32 	%f1917, %f1811;
	mov.f32 	%f1918, %f1811;
	mov.f32 	%f1919, %f1811;
	mov.f32 	%f1920, %f1811;
	mov.f32 	%f1921, %f1811;
	mov.f32 	%f1922, %f1811;
	mov.f32 	%f1923, %f1811;
	mov.f32 	%f1924, %f1811;
	mov.f32 	%f1925, %f1811;
	mov.f32 	%f1926, %f1811;
	mov.f32 	%f1927, %f1811;
	mov.f32 	%f1928, %f1811;
	mov.f32 	%f1929, %f1811;
	mov.f32 	%f1930, %f1811;
	mov.f32 	%f1931, %f1811;
	mov.f32 	%f1932, %f1811;
	mov.f32 	%f1933, %f1811;
	mov.f32 	%f1934, %f1811;
	mov.f32 	%f1935, %f1811;
	mov.f32 	%f1936, %f1811;
	mov.f32 	%f1937, %f1811;
	mov.f32 	%f1938, %f1811;
	mov.f32 	%f1939, %f1811;
	mov.f32 	%f1940, %f1811;
	mov.f32 	%f1941, %f1811;
	mov.f32 	%f1942, %f1811;
	mov.f32 	%f1943, %f1811;
	mov.f32 	%f1944, %f1811;
	mov.f32 	%f1945, %f1811;
	mov.f32 	%f1946, %f1811;
	mov.f32 	%f1947, %f1811;
	mov.f32 	%f1948, %f1811;
	mov.f32 	%f1949, %f1811;
	mov.f32 	%f1950, %f1811;
	bra.uni 	$L__BB0_2;
$L__BB0_4:
	.loc	1 0 0
	add.s32 	%r42, %r654, 1;
	.loc	1 1224 22
	setp.lt.s32 	%p75, %r654, %r34;
	.loc	1 1275 19
	mul.f32 	%f1823, %f1823, %f1951;
	mul.f32 	%f1824, %f1824, %f1951;
	mul.f32 	%f1825, %f1825, %f1951;
	mul.f32 	%f1826, %f1826, %f1951;
	mul.f32 	%f1827, %f1827, %f1951;
	mul.f32 	%f1828, %f1828, %f1951;
	mul.f32 	%f1829, %f1829, %f1951;
	mul.f32 	%f1830, %f1830, %f1951;
	mul.f32 	%f1831, %f1831, %f1951;
	mul.f32 	%f1832, %f1832, %f1951;
	mul.f32 	%f1833, %f1833, %f1951;
	mul.f32 	%f1834, %f1834, %f1951;
	mul.f32 	%f1835, %f1835, %f1951;
	mul.f32 	%f1836, %f1836, %f1951;
	mul.f32 	%f1837, %f1837, %f1951;
	mul.f32 	%f1838, %f1838, %f1951;
	mul.f32 	%f1839, %f1839, %f1951;
	mul.f32 	%f1840, %f1840, %f1951;
	mul.f32 	%f1841, %f1841, %f1951;
	mul.f32 	%f1842, %f1842, %f1951;
	mul.f32 	%f1843, %f1843, %f1951;
	mul.f32 	%f1844, %f1844, %f1951;
	mul.f32 	%f1845, %f1845, %f1951;
	mul.f32 	%f1846, %f1846, %f1951;
	mul.f32 	%f1847, %f1847, %f1951;
	mul.f32 	%f1848, %f1848, %f1951;
	mul.f32 	%f1849, %f1849, %f1951;
	mul.f32 	%f1850, %f1850, %f1951;
	mul.f32 	%f1851, %f1851, %f1951;
	mul.f32 	%f1852, %f1852, %f1951;
	mul.f32 	%f1853, %f1853, %f1951;
	mul.f32 	%f1854, %f1854, %f1951;
	mul.f32 	%f1855, %f1855, %f1951;
	mul.f32 	%f1856, %f1856, %f1951;
	mul.f32 	%f1857, %f1857, %f1951;
	mul.f32 	%f1858, %f1858, %f1951;
	mul.f32 	%f1859, %f1859, %f1951;
	mul.f32 	%f1860, %f1860, %f1951;
	mul.f32 	%f1861, %f1861, %f1951;
	mul.f32 	%f1862, %f1862, %f1951;
	mul.f32 	%f1863, %f1863, %f1951;
	mul.f32 	%f1864, %f1864, %f1951;
	mul.f32 	%f1865, %f1865, %f1951;
	mul.f32 	%f1866, %f1866, %f1951;
	mul.f32 	%f1867, %f1867, %f1951;
	mul.f32 	%f1868, %f1868, %f1951;
	mul.f32 	%f1869, %f1869, %f1951;
	mul.f32 	%f1870, %f1870, %f1951;
	mul.f32 	%f1871, %f1871, %f1951;
	mul.f32 	%f1872, %f1872, %f1951;
	mul.f32 	%f1873, %f1873, %f1951;
	mul.f32 	%f1874, %f1874, %f1951;
	mul.f32 	%f1875, %f1875, %f1951;
	mul.f32 	%f1876, %f1876, %f1951;
	mul.f32 	%f1877, %f1877, %f1951;
	mul.f32 	%f1878, %f1878, %f1951;
	mul.f32 	%f1879, %f1879, %f1951;
	mul.f32 	%f1880, %f1880, %f1951;
	mul.f32 	%f1881, %f1881, %f1951;
	mul.f32 	%f1882, %f1882, %f1951;
	mul.f32 	%f1883, %f1883, %f1951;
	mul.f32 	%f1884, %f1884, %f1951;
	mul.f32 	%f1885, %f1885, %f1951;
	mul.f32 	%f1886, %f1886, %f1951;
	mul.f32 	%f1887, %f1887, %f1951;
	mul.f32 	%f1888, %f1888, %f1951;
	mul.f32 	%f1889, %f1889, %f1951;
	mul.f32 	%f1890, %f1890, %f1951;
	mul.f32 	%f1891, %f1891, %f1951;
	mul.f32 	%f1892, %f1892, %f1951;
	mul.f32 	%f1893, %f1893, %f1951;
	mul.f32 	%f1894, %f1894, %f1951;
	mul.f32 	%f1895, %f1895, %f1951;
	mul.f32 	%f1896, %f1896, %f1951;
	mul.f32 	%f1897, %f1897, %f1951;
	mul.f32 	%f1898, %f1898, %f1951;
	mul.f32 	%f1899, %f1899, %f1951;
	mul.f32 	%f1900, %f1900, %f1951;
	mul.f32 	%f1901, %f1901, %f1951;
	mul.f32 	%f1902, %f1902, %f1951;
	mul.f32 	%f1903, %f1903, %f1951;
	mul.f32 	%f1904, %f1904, %f1951;
	mul.f32 	%f1905, %f1905, %f1951;
	mul.f32 	%f1906, %f1906, %f1951;
	mul.f32 	%f1907, %f1907, %f1951;
	mul.f32 	%f1908, %f1908, %f1951;
	mul.f32 	%f1909, %f1909, %f1951;
	mul.f32 	%f1910, %f1910, %f1951;
	mul.f32 	%f1911, %f1911, %f1951;
	mul.f32 	%f1912, %f1912, %f1951;
	mul.f32 	%f1913, %f1913, %f1951;
	mul.f32 	%f1914, %f1914, %f1951;
	mul.f32 	%f1915, %f1915, %f1951;
	mul.f32 	%f1916, %f1916, %f1951;
	mul.f32 	%f1917, %f1917, %f1951;
	mul.f32 	%f1918, %f1918, %f1951;
	mul.f32 	%f1919, %f1919, %f1951;
	mul.f32 	%f1920, %f1920, %f1951;
	mul.f32 	%f1921, %f1921, %f1951;
	mul.f32 	%f1922, %f1922, %f1951;
	mul.f32 	%f1923, %f1923, %f1951;
	mul.f32 	%f1924, %f1924, %f1951;
	mul.f32 	%f1925, %f1925, %f1951;
	mul.f32 	%f1926, %f1926, %f1951;
	mul.f32 	%f1927, %f1927, %f1951;
	mul.f32 	%f1928, %f1928, %f1951;
	mul.f32 	%f1929, %f1929, %f1951;
	mul.f32 	%f1930, %f1930, %f1951;
	mul.f32 	%f1931, %f1931, %f1951;
	mul.f32 	%f1932, %f1932, %f1951;
	mul.f32 	%f1933, %f1933, %f1951;
	mul.f32 	%f1934, %f1934, %f1951;
	mul.f32 	%f1935, %f1935, %f1951;
	mul.f32 	%f1936, %f1936, %f1951;
	mul.f32 	%f1937, %f1937, %f1951;
	mul.f32 	%f1938, %f1938, %f1951;
	mul.f32 	%f1939, %f1939, %f1951;
	mul.f32 	%f1940, %f1940, %f1951;
	mul.f32 	%f1941, %f1941, %f1951;
	mul.f32 	%f1942, %f1942, %f1951;
	mul.f32 	%f1943, %f1943, %f1951;
	mul.f32 	%f1944, %f1944, %f1951;
	mul.f32 	%f1945, %f1945, %f1951;
	mul.f32 	%f1946, %f1946, %f1951;
	mul.f32 	%f1947, %f1947, %f1951;
	mul.f32 	%f1948, %f1948, %f1951;
	mul.f32 	%f1949, %f1949, %f1951;
	mul.f32 	%f1950, %f1950, %f1951;
	.loc	1 1240 13
	add.s64 	%rd153, %rd18, %rd201;
	add.s64 	%rd154, %rd17, %rd201;
	add.s64 	%rd155, %rd16, %rd201;
	add.s64 	%rd156, %rd15, %rd201;
	add.s64 	%rd157, %rd14, %rd201;
	add.s64 	%rd158, %rd13, %rd201;
	add.s64 	%rd159, %rd12, %rd201;
	.loc	1 1241 13
	add.s64 	%rd160, %rd11, %rd201;
	add.s64 	%rd161, %rd10, %rd201;
	add.s64 	%rd162, %rd9, %rd201;
	add.s64 	%rd163, %rd8, %rd201;
	add.s64 	%rd164, %rd7, %rd201;
	add.s64 	%rd165, %rd6, %rd201;
	add.s64 	%rd166, %rd5, %rd201;
	add.s64 	%rd167, %rd4, %rd201;
	.loc	1 1224 22
	add.s64 	%rd168, %rd3, %rd201;
	add.s32 	%r338, %r653, 1;
	setp.lt.s32 	%p76, %r338, 4;
	selp.b32 	%r653, %r338, 0, %p76;
	.loc	1 1227 24
	shl.b32 	%r339, %r653, 14;
	add.s32 	%r341, %r240, %r339;
	bar.sync 	0;
	add.s32 	%r306, %r341, %r26;
	add.s32 	%r308, %r341, %r27;
	add.s32 	%r310, %r341, %r28;
	add.s32 	%r312, %r341, %r29;
	add.s32 	%r314, %r341, %r30;
	add.s32 	%r316, %r341, %r31;
	add.s32 	%r318, %r341, %r32;
	add.s32 	%r320, %r341, %r33;
	selp.b32 	%r307, 16, 0, %p75;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r306 + 0 ], [ %rd153 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r308 + 0 ], [ %rd154 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r310 + 0 ], [ %rd155 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r312 + 0 ], [ %rd156 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r314 + 0 ], [ %rd157 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r316 + 0 ], [ %rd158 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r318 + 0 ], [ %rd159 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r320 + 0 ], [ %rd160 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 1228 24
	add.s32 	%r342, %r341, 65536;
	add.s32 	%r322, %r342, %r26;
	add.s32 	%r324, %r342, %r27;
	add.s32 	%r326, %r342, %r28;
	add.s32 	%r328, %r342, %r29;
	add.s32 	%r330, %r342, %r30;
	add.s32 	%r332, %r342, %r31;
	add.s32 	%r334, %r342, %r32;
	add.s32 	%r336, %r342, %r33;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r322 + 0 ], [ %rd161 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r324 + 0 ], [ %rd162 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r326 + 0 ], [ %rd163 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r328 + 0 ], [ %rd164 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r330 + 0 ], [ %rd165 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r332 + 0 ], [ %rd166 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r334 + 0 ], [ %rd167 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r336 + 0 ], [ %rd168 + 0 ], 0x10, %r307;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 1224 22
	add.s64 	%rd201, %rd201, 128;
	setp.lt.s32 	%p77, %r42, %r24;
	mov.u32 	%r654, %r42;
	@%p77 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_5;
$L__BB0_2:
	add.s32 	%r290, %r652, 1;
	setp.lt.s32 	%p55, %r290, 4;
	selp.b32 	%r652, %r290, 0, %p55;
	.loc	1 1227 24
	shl.b32 	%r291, %r652, 14;
	add.s32 	%r293, %r240, %r291;
	// begin inline asm
	cp.async.wait_group 0x4;
	// end inline asm
	bar.sync 	0;
	.loc	1 1228 24
	add.s32 	%r294, %r293, 65536;
	.loc	1 1238 27
	shfl.sync.idx.b32	%r295, %r35, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r296, %r295, 7;
	and.b32  	%r297, %r296, 384;
	cvt.u64.u32 	%rd143, %r297;
	shr.u32 	%r298, %r293, 4;
	cvt.u64.u32 	%rd144, %r298;
	and.b64  	%rd145, %rd144, 16383;
	add.s64 	%rd146, %rd145, %rd143;
	or.b64  	%rd125, %rd146, 4611686293372403712;
	shr.u32 	%r299, %r294, 4;
	cvt.u64.u32 	%rd147, %r299;
	and.b64  	%rd148, %rd147, 16383;
	or.b64  	%rd126, %rd148, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1823,%f1824,%f1825,%f1826,%f1827,%f1828,%f1829,%f1830,%f1831,%f1832,%f1833,%f1834,%f1835,%f1836,%f1837,%f1838,%f1839,%f1840,%f1841,%f1842,%f1843,%f1844,%f1845,%f1846,%f1847,%f1848,%f1849,%f1850,%f1851,%f1852,%f1853,%f1854,%f1855,%f1856,%f1857,%f1858,%f1859,%f1860,%f1861,%f1862,%f1863,%f1864,%f1865,%f1866,%f1867,%f1868,%f1869,%f1870,%f1871,%f1872,%f1873,%f1874,%f1875,%f1876,%f1877,%f1878,%f1879,%f1880,%f1881,%f1882,%f1883,%f1884,%f1885,%f1886}, %rd125, %rd126, 1, 1, 1;
	// end inline asm
	add.s64 	%rd127, %rd146, 4611686293372403714;
	add.s64 	%rd128, %rd148, 4611686293372403714;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1823,%f1824,%f1825,%f1826,%f1827,%f1828,%f1829,%f1830,%f1831,%f1832,%f1833,%f1834,%f1835,%f1836,%f1837,%f1838,%f1839,%f1840,%f1841,%f1842,%f1843,%f1844,%f1845,%f1846,%f1847,%f1848,%f1849,%f1850,%f1851,%f1852,%f1853,%f1854,%f1855,%f1856,%f1857,%f1858,%f1859,%f1860,%f1861,%f1862,%f1863,%f1864,%f1865,%f1866,%f1867,%f1868,%f1869,%f1870,%f1871,%f1872,%f1873,%f1874,%f1875,%f1876,%f1877,%f1878,%f1879,%f1880,%f1881,%f1882,%f1883,%f1884,%f1885,%f1886}, %rd127, %rd128, 1, 1, 1;
	// end inline asm
	add.s64 	%rd129, %rd146, 4611686293372403716;
	add.s64 	%rd130, %rd148, 4611686293372403716;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1823,%f1824,%f1825,%f1826,%f1827,%f1828,%f1829,%f1830,%f1831,%f1832,%f1833,%f1834,%f1835,%f1836,%f1837,%f1838,%f1839,%f1840,%f1841,%f1842,%f1843,%f1844,%f1845,%f1846,%f1847,%f1848,%f1849,%f1850,%f1851,%f1852,%f1853,%f1854,%f1855,%f1856,%f1857,%f1858,%f1859,%f1860,%f1861,%f1862,%f1863,%f1864,%f1865,%f1866,%f1867,%f1868,%f1869,%f1870,%f1871,%f1872,%f1873,%f1874,%f1875,%f1876,%f1877,%f1878,%f1879,%f1880,%f1881,%f1882,%f1883,%f1884,%f1885,%f1886}, %rd129, %rd130, 1, 1, 1;
	// end inline asm
	add.s64 	%rd131, %rd146, 4611686293372403718;
	add.s64 	%rd132, %rd148, 4611686293372403718;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1823,%f1824,%f1825,%f1826,%f1827,%f1828,%f1829,%f1830,%f1831,%f1832,%f1833,%f1834,%f1835,%f1836,%f1837,%f1838,%f1839,%f1840,%f1841,%f1842,%f1843,%f1844,%f1845,%f1846,%f1847,%f1848,%f1849,%f1850,%f1851,%f1852,%f1853,%f1854,%f1855,%f1856,%f1857,%f1858,%f1859,%f1860,%f1861,%f1862,%f1863,%f1864,%f1865,%f1866,%f1867,%f1868,%f1869,%f1870,%f1871,%f1872,%f1873,%f1874,%f1875,%f1876,%f1877,%f1878,%f1879,%f1880,%f1881,%f1882,%f1883,%f1884,%f1885,%f1886}, %rd131, %rd132, 1, 1, 1;
	// end inline asm
	add.s64 	%rd133, %rd146, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1887,%f1888,%f1889,%f1890,%f1891,%f1892,%f1893,%f1894,%f1895,%f1896,%f1897,%f1898,%f1899,%f1900,%f1901,%f1902,%f1903,%f1904,%f1905,%f1906,%f1907,%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915,%f1916,%f1917,%f1918,%f1919,%f1920,%f1921,%f1922,%f1923,%f1924,%f1925,%f1926,%f1927,%f1928,%f1929,%f1930,%f1931,%f1932,%f1933,%f1934,%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950}, %rd133, %rd126, 1, 1, 1;
	// end inline asm
	add.s64 	%rd135, %rd146, 4611686293372404226;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1887,%f1888,%f1889,%f1890,%f1891,%f1892,%f1893,%f1894,%f1895,%f1896,%f1897,%f1898,%f1899,%f1900,%f1901,%f1902,%f1903,%f1904,%f1905,%f1906,%f1907,%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915,%f1916,%f1917,%f1918,%f1919,%f1920,%f1921,%f1922,%f1923,%f1924,%f1925,%f1926,%f1927,%f1928,%f1929,%f1930,%f1931,%f1932,%f1933,%f1934,%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950}, %rd135, %rd128, 1, 1, 1;
	// end inline asm
	add.s64 	%rd137, %rd146, 4611686293372404228;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1887,%f1888,%f1889,%f1890,%f1891,%f1892,%f1893,%f1894,%f1895,%f1896,%f1897,%f1898,%f1899,%f1900,%f1901,%f1902,%f1903,%f1904,%f1905,%f1906,%f1907,%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915,%f1916,%f1917,%f1918,%f1919,%f1920,%f1921,%f1922,%f1923,%f1924,%f1925,%f1926,%f1927,%f1928,%f1929,%f1930,%f1931,%f1932,%f1933,%f1934,%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950}, %rd137, %rd130, 1, 1, 1;
	// end inline asm
	add.s64 	%rd139, %rd146, 4611686293372404230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f1887,%f1888,%f1889,%f1890,%f1891,%f1892,%f1893,%f1894,%f1895,%f1896,%f1897,%f1898,%f1899,%f1900,%f1901,%f1902,%f1903,%f1904,%f1905,%f1906,%f1907,%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915,%f1916,%f1917,%f1918,%f1919,%f1920,%f1921,%f1922,%f1923,%f1924,%f1925,%f1926,%f1927,%f1928,%f1929,%f1930,%f1931,%f1932,%f1933,%f1934,%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950}, %rd139, %rd132, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%f1670, %r293;
	mov.b32 	%f1675, %r294;
	mov.f32 	%f1679, %f1811;
	mov.f32 	%f1676, %f1810;
	mov.f32 	%f1677, %f1809;
	mov.f32 	%f1671, %f1809;
	mov.f32 	%f1672, %f1810;
	mov.f32 	%f1673, %f1811;
	mov.f32 	%f1674, %f1811;
	mov.f32 	%f1678, %f1811;
	// begin inline asm
	// wait for regs: %f1823,%f1824,%f1825,%f1826,%f1827,%f1828,%f1829,%f1830,%f1831,%f1832,%f1833,%f1834,%f1835,%f1836,%f1837,%f1838,%f1839,%f1840,%f1841,%f1842,%f1843,%f1844,%f1845,%f1846,%f1847,%f1848,%f1849,%f1850,%f1851,%f1852,%f1853,%f1854,%f1855,%f1856,%f1857,%f1858,%f1859,%f1860,%f1861,%f1862,%f1863,%f1864,%f1865,%f1866,%f1867,%f1868,%f1869,%f1870,%f1871,%f1872,%f1873,%f1874,%f1875,%f1876,%f1877,%f1878,%f1879,%f1880,%f1881,%f1882,%f1883,%f1884,%f1885,%f1886,%f1887,%f1888,%f1889,%f1890,%f1891,%f1892,%f1893,%f1894,%f1895,%f1896,%f1897,%f1898,%f1899,%f1900,%f1901,%f1902,%f1903,%f1904,%f1905,%f1906,%f1907,%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915,%f1916,%f1917,%f1918,%f1919,%f1920,%f1921,%f1922,%f1923,%f1924,%f1925,%f1926,%f1927,%f1928,%f1929,%f1930,%f1931,%f1932,%f1933,%f1934,%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1670,%f1671,%f1672,%f1673,%f1674,%f1675,%f1676,%f1677,%f1678,%f1679
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 1258 54
	add.s32 	%r41, %r48, %r654;
	mul.wide.s32 	%rd149, %r41, 4;
	add.s64 	%rd141, %rd1, %rd149;
	.loc	1 1258 16
	// begin inline asm
	mov.u32 %r288, 0x0;
	@%p1 ld.global.b32 { %r288 }, [ %rd141 + 0 ];
	// end inline asm
	mov.b32 	%f1818, %r288;
	.loc	1 1261 54
	add.s64 	%rd142, %rd2, %rd149;
	.loc	1 1261 16
	// begin inline asm
	mov.u32 %r289, 0x0;
	@%p1 ld.global.b32 { %r289 }, [ %rd142 + 0 ];
	// end inline asm
	mov.b32 	%f1819, %r289;
	.loc	1 1263 30
	mul.f32 	%f1951, %f1818, %f1819;
	.loc	1 1264 24
	setp.eq.s32 	%p56, %r36, %r654;
	.loc	1 1264 15
	@%p56 bra 	$L__BB0_4;
	.loc	1 1268 58
	add.s32 	%r305, %r41, 1;
	mul.wide.s32 	%rd152, %r305, 4;
	add.s64 	%rd150, %rd1, %rd152;
	.loc	1 1268 20
	// begin inline asm
	mov.u32 %r300, 0x0;
	@%p1 ld.global.b32 { %r300 }, [ %rd150 + 0 ];
	// end inline asm
	mov.b32 	%f1820, %r300;
	.loc	1 1271 58
	add.s64 	%rd151, %rd2, %rd152;
	.loc	1 1271 20
	// begin inline asm
	mov.u32 %r301, 0x0;
	@%p1 ld.global.b32 { %r301 }, [ %rd151 + 0 ];
	// end inline asm
	mov.b32 	%f1821, %r301;
	.loc	1 1273 44
	mul.f32 	%f1822, %f1820, %f1821;
	.loc	1 1274 47
	mov.b32 	%r304, %f1822;
	mov.b32 	%r303, %f1951;
	// begin inline asm
	div.full.f32 %r302, %r303, %r304;
	// end inline asm
	mov.b32 	%f1951, %r302;
	bra.uni 	$L__BB0_4;
$L__BB0_5:
	.loc	1 1210 40
	shl.b32 	%r535, %r3, 3;
	and.b32  	%r536, %r535, 120;
	.loc	1 1211 27
	or.b32  	%r537, %r6, %r536;
	.loc	1 1210 40
	bfe.u32 	%r538, %r3, 4, 3;
	.loc	1 1210 27
	or.b32  	%r539, %r538, %r2;
	or.b32  	%r540, %r539, 120;
	or.b32  	%r541, %r539, 112;
	or.b32  	%r542, %r539, 104;
	or.b32  	%r543, %r539, 96;
	or.b32  	%r544, %r539, 88;
	or.b32  	%r545, %r539, 80;
	or.b32  	%r546, %r539, 72;
	or.b32  	%r547, %r539, 64;
	or.b32  	%r548, %r539, 56;
	or.b32  	%r549, %r539, 48;
	or.b32  	%r550, %r539, 40;
	or.b32  	%r551, %r539, 32;
	or.b32  	%r552, %r539, 24;
	or.b32  	%r553, %r539, 16;
	or.b32  	%r554, %r539, 8;
	.loc	1 1224 22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 1281 17
	mov.b32 	%r343, %f1823;
	// begin inline asm
	cvt.rn.bf16.f32 %rs1, %r343;
	// end inline asm
	mov.b32 	%r344, %f1824;
	// begin inline asm
	cvt.rn.bf16.f32 %rs2, %r344;
	// end inline asm
	mov.b32 	%r345, %f1825;
	// begin inline asm
	cvt.rn.bf16.f32 %rs3, %r345;
	// end inline asm
	mov.b32 	%r346, %f1826;
	// begin inline asm
	cvt.rn.bf16.f32 %rs4, %r346;
	// end inline asm
	mov.b32 	%r347, %f1827;
	// begin inline asm
	cvt.rn.bf16.f32 %rs5, %r347;
	// end inline asm
	mov.b32 	%r348, %f1828;
	// begin inline asm
	cvt.rn.bf16.f32 %rs6, %r348;
	// end inline asm
	mov.b32 	%r349, %f1829;
	// begin inline asm
	cvt.rn.bf16.f32 %rs7, %r349;
	// end inline asm
	mov.b32 	%r350, %f1830;
	// begin inline asm
	cvt.rn.bf16.f32 %rs8, %r350;
	// end inline asm
	mov.b32 	%r351, %f1831;
	// begin inline asm
	cvt.rn.bf16.f32 %rs9, %r351;
	// end inline asm
	mov.b32 	%r352, %f1832;
	// begin inline asm
	cvt.rn.bf16.f32 %rs10, %r352;
	// end inline asm
	mov.b32 	%r353, %f1833;
	// begin inline asm
	cvt.rn.bf16.f32 %rs11, %r353;
	// end inline asm
	mov.b32 	%r354, %f1834;
	// begin inline asm
	cvt.rn.bf16.f32 %rs12, %r354;
	// end inline asm
	mov.b32 	%r355, %f1835;
	// begin inline asm
	cvt.rn.bf16.f32 %rs13, %r355;
	// end inline asm
	mov.b32 	%r356, %f1836;
	// begin inline asm
	cvt.rn.bf16.f32 %rs14, %r356;
	// end inline asm
	mov.b32 	%r357, %f1837;
	// begin inline asm
	cvt.rn.bf16.f32 %rs15, %r357;
	// end inline asm
	mov.b32 	%r358, %f1838;
	// begin inline asm
	cvt.rn.bf16.f32 %rs16, %r358;
	// end inline asm
	mov.b32 	%r359, %f1839;
	// begin inline asm
	cvt.rn.bf16.f32 %rs17, %r359;
	// end inline asm
	mov.b32 	%r360, %f1840;
	// begin inline asm
	cvt.rn.bf16.f32 %rs18, %r360;
	// end inline asm
	mov.b32 	%r361, %f1841;
	// begin inline asm
	cvt.rn.bf16.f32 %rs19, %r361;
	// end inline asm
	mov.b32 	%r362, %f1842;
	// begin inline asm
	cvt.rn.bf16.f32 %rs20, %r362;
	// end inline asm
	mov.b32 	%r363, %f1843;
	// begin inline asm
	cvt.rn.bf16.f32 %rs21, %r363;
	// end inline asm
	mov.b32 	%r364, %f1844;
	// begin inline asm
	cvt.rn.bf16.f32 %rs22, %r364;
	// end inline asm
	mov.b32 	%r365, %f1845;
	// begin inline asm
	cvt.rn.bf16.f32 %rs23, %r365;
	// end inline asm
	mov.b32 	%r366, %f1846;
	// begin inline asm
	cvt.rn.bf16.f32 %rs24, %r366;
	// end inline asm
	mov.b32 	%r367, %f1847;
	// begin inline asm
	cvt.rn.bf16.f32 %rs25, %r367;
	// end inline asm
	mov.b32 	%r368, %f1848;
	// begin inline asm
	cvt.rn.bf16.f32 %rs26, %r368;
	// end inline asm
	mov.b32 	%r369, %f1849;
	// begin inline asm
	cvt.rn.bf16.f32 %rs27, %r369;
	// end inline asm
	mov.b32 	%r370, %f1850;
	// begin inline asm
	cvt.rn.bf16.f32 %rs28, %r370;
	// end inline asm
	mov.b32 	%r371, %f1851;
	// begin inline asm
	cvt.rn.bf16.f32 %rs29, %r371;
	// end inline asm
	mov.b32 	%r372, %f1852;
	// begin inline asm
	cvt.rn.bf16.f32 %rs30, %r372;
	// end inline asm
	mov.b32 	%r373, %f1853;
	// begin inline asm
	cvt.rn.bf16.f32 %rs31, %r373;
	// end inline asm
	mov.b32 	%r374, %f1854;
	// begin inline asm
	cvt.rn.bf16.f32 %rs32, %r374;
	// end inline asm
	mov.b32 	%r375, %f1855;
	// begin inline asm
	cvt.rn.bf16.f32 %rs33, %r375;
	// end inline asm
	mov.b32 	%r376, %f1856;
	// begin inline asm
	cvt.rn.bf16.f32 %rs34, %r376;
	// end inline asm
	mov.b32 	%r377, %f1857;
	// begin inline asm
	cvt.rn.bf16.f32 %rs35, %r377;
	// end inline asm
	mov.b32 	%r378, %f1858;
	// begin inline asm
	cvt.rn.bf16.f32 %rs36, %r378;
	// end inline asm
	mov.b32 	%r379, %f1859;
	// begin inline asm
	cvt.rn.bf16.f32 %rs37, %r379;
	// end inline asm
	mov.b32 	%r380, %f1860;
	// begin inline asm
	cvt.rn.bf16.f32 %rs38, %r380;
	// end inline asm
	mov.b32 	%r381, %f1861;
	// begin inline asm
	cvt.rn.bf16.f32 %rs39, %r381;
	// end inline asm
	mov.b32 	%r382, %f1862;
	// begin inline asm
	cvt.rn.bf16.f32 %rs40, %r382;
	// end inline asm
	mov.b32 	%r383, %f1863;
	// begin inline asm
	cvt.rn.bf16.f32 %rs41, %r383;
	// end inline asm
	mov.b32 	%r384, %f1864;
	// begin inline asm
	cvt.rn.bf16.f32 %rs42, %r384;
	// end inline asm
	mov.b32 	%r385, %f1865;
	// begin inline asm
	cvt.rn.bf16.f32 %rs43, %r385;
	// end inline asm
	mov.b32 	%r386, %f1866;
	// begin inline asm
	cvt.rn.bf16.f32 %rs44, %r386;
	// end inline asm
	mov.b32 	%r387, %f1867;
	// begin inline asm
	cvt.rn.bf16.f32 %rs45, %r387;
	// end inline asm
	mov.b32 	%r388, %f1868;
	// begin inline asm
	cvt.rn.bf16.f32 %rs46, %r388;
	// end inline asm
	mov.b32 	%r389, %f1869;
	// begin inline asm
	cvt.rn.bf16.f32 %rs47, %r389;
	// end inline asm
	mov.b32 	%r390, %f1870;
	// begin inline asm
	cvt.rn.bf16.f32 %rs48, %r390;
	// end inline asm
	mov.b32 	%r391, %f1871;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r391;
	// end inline asm
	mov.b32 	%r392, %f1872;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r392;
	// end inline asm
	mov.b32 	%r393, %f1873;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r393;
	// end inline asm
	mov.b32 	%r394, %f1874;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r394;
	// end inline asm
	mov.b32 	%r395, %f1875;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r395;
	// end inline asm
	mov.b32 	%r396, %f1876;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r396;
	// end inline asm
	mov.b32 	%r397, %f1877;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r397;
	// end inline asm
	mov.b32 	%r398, %f1878;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r398;
	// end inline asm
	mov.b32 	%r399, %f1879;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r399;
	// end inline asm
	mov.b32 	%r400, %f1880;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r400;
	// end inline asm
	mov.b32 	%r401, %f1881;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r401;
	// end inline asm
	mov.b32 	%r402, %f1882;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r402;
	// end inline asm
	mov.b32 	%r403, %f1883;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r403;
	// end inline asm
	mov.b32 	%r404, %f1884;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r404;
	// end inline asm
	mov.b32 	%r405, %f1885;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r405;
	// end inline asm
	mov.b32 	%r406, %f1886;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r406;
	// end inline asm
	mov.b32 	%r407, %f1887;
	// begin inline asm
	cvt.rn.bf16.f32 %rs65, %r407;
	// end inline asm
	mov.b32 	%r408, %f1888;
	// begin inline asm
	cvt.rn.bf16.f32 %rs66, %r408;
	// end inline asm
	mov.b32 	%r409, %f1889;
	// begin inline asm
	cvt.rn.bf16.f32 %rs67, %r409;
	// end inline asm
	mov.b32 	%r410, %f1890;
	// begin inline asm
	cvt.rn.bf16.f32 %rs68, %r410;
	// end inline asm
	mov.b32 	%r411, %f1891;
	// begin inline asm
	cvt.rn.bf16.f32 %rs69, %r411;
	// end inline asm
	mov.b32 	%r412, %f1892;
	// begin inline asm
	cvt.rn.bf16.f32 %rs70, %r412;
	// end inline asm
	mov.b32 	%r413, %f1893;
	// begin inline asm
	cvt.rn.bf16.f32 %rs71, %r413;
	// end inline asm
	mov.b32 	%r414, %f1894;
	// begin inline asm
	cvt.rn.bf16.f32 %rs72, %r414;
	// end inline asm
	mov.b32 	%r415, %f1895;
	// begin inline asm
	cvt.rn.bf16.f32 %rs73, %r415;
	// end inline asm
	mov.b32 	%r416, %f1896;
	// begin inline asm
	cvt.rn.bf16.f32 %rs74, %r416;
	// end inline asm
	mov.b32 	%r417, %f1897;
	// begin inline asm
	cvt.rn.bf16.f32 %rs75, %r417;
	// end inline asm
	mov.b32 	%r418, %f1898;
	// begin inline asm
	cvt.rn.bf16.f32 %rs76, %r418;
	// end inline asm
	mov.b32 	%r419, %f1899;
	// begin inline asm
	cvt.rn.bf16.f32 %rs77, %r419;
	// end inline asm
	mov.b32 	%r420, %f1900;
	// begin inline asm
	cvt.rn.bf16.f32 %rs78, %r420;
	// end inline asm
	mov.b32 	%r421, %f1901;
	// begin inline asm
	cvt.rn.bf16.f32 %rs79, %r421;
	// end inline asm
	mov.b32 	%r422, %f1902;
	// begin inline asm
	cvt.rn.bf16.f32 %rs80, %r422;
	// end inline asm
	mov.b32 	%r423, %f1903;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r423;
	// end inline asm
	mov.b32 	%r424, %f1904;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r424;
	// end inline asm
	mov.b32 	%r425, %f1905;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r425;
	// end inline asm
	mov.b32 	%r426, %f1906;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r426;
	// end inline asm
	mov.b32 	%r427, %f1907;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r427;
	// end inline asm
	mov.b32 	%r428, %f1908;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r428;
	// end inline asm
	mov.b32 	%r429, %f1909;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r429;
	// end inline asm
	mov.b32 	%r430, %f1910;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r430;
	// end inline asm
	mov.b32 	%r431, %f1911;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r431;
	// end inline asm
	mov.b32 	%r432, %f1912;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r432;
	// end inline asm
	mov.b32 	%r433, %f1913;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r433;
	// end inline asm
	mov.b32 	%r434, %f1914;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r434;
	// end inline asm
	mov.b32 	%r435, %f1915;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r435;
	// end inline asm
	mov.b32 	%r436, %f1916;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r436;
	// end inline asm
	mov.b32 	%r437, %f1917;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r437;
	// end inline asm
	mov.b32 	%r438, %f1918;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r438;
	// end inline asm
	mov.b32 	%r439, %f1919;
	// begin inline asm
	cvt.rn.bf16.f32 %rs97, %r439;
	// end inline asm
	mov.b32 	%r440, %f1920;
	// begin inline asm
	cvt.rn.bf16.f32 %rs98, %r440;
	// end inline asm
	mov.b32 	%r441, %f1921;
	// begin inline asm
	cvt.rn.bf16.f32 %rs99, %r441;
	// end inline asm
	mov.b32 	%r442, %f1922;
	// begin inline asm
	cvt.rn.bf16.f32 %rs100, %r442;
	// end inline asm
	mov.b32 	%r443, %f1923;
	// begin inline asm
	cvt.rn.bf16.f32 %rs101, %r443;
	// end inline asm
	mov.b32 	%r444, %f1924;
	// begin inline asm
	cvt.rn.bf16.f32 %rs102, %r444;
	// end inline asm
	mov.b32 	%r445, %f1925;
	// begin inline asm
	cvt.rn.bf16.f32 %rs103, %r445;
	// end inline asm
	mov.b32 	%r446, %f1926;
	// begin inline asm
	cvt.rn.bf16.f32 %rs104, %r446;
	// end inline asm
	mov.b32 	%r447, %f1927;
	// begin inline asm
	cvt.rn.bf16.f32 %rs105, %r447;
	// end inline asm
	mov.b32 	%r448, %f1928;
	// begin inline asm
	cvt.rn.bf16.f32 %rs106, %r448;
	// end inline asm
	mov.b32 	%r449, %f1929;
	// begin inline asm
	cvt.rn.bf16.f32 %rs107, %r449;
	// end inline asm
	mov.b32 	%r450, %f1930;
	// begin inline asm
	cvt.rn.bf16.f32 %rs108, %r450;
	// end inline asm
	mov.b32 	%r451, %f1931;
	// begin inline asm
	cvt.rn.bf16.f32 %rs109, %r451;
	// end inline asm
	mov.b32 	%r452, %f1932;
	// begin inline asm
	cvt.rn.bf16.f32 %rs110, %r452;
	// end inline asm
	mov.b32 	%r453, %f1933;
	// begin inline asm
	cvt.rn.bf16.f32 %rs111, %r453;
	// end inline asm
	mov.b32 	%r454, %f1934;
	// begin inline asm
	cvt.rn.bf16.f32 %rs112, %r454;
	// end inline asm
	mov.b32 	%r455, %f1935;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r455;
	// end inline asm
	mov.b32 	%r456, %f1936;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r456;
	// end inline asm
	mov.b32 	%r457, %f1937;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r457;
	// end inline asm
	mov.b32 	%r458, %f1938;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r458;
	// end inline asm
	mov.b32 	%r459, %f1939;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r459;
	// end inline asm
	mov.b32 	%r460, %f1940;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r460;
	// end inline asm
	mov.b32 	%r461, %f1941;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r461;
	// end inline asm
	mov.b32 	%r462, %f1942;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r462;
	// end inline asm
	mov.b32 	%r463, %f1943;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r463;
	// end inline asm
	mov.b32 	%r464, %f1944;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r464;
	// end inline asm
	mov.b32 	%r465, %f1945;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r465;
	// end inline asm
	mov.b32 	%r466, %f1946;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r466;
	// end inline asm
	mov.b32 	%r467, %f1947;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r467;
	// end inline asm
	mov.b32 	%r468, %f1948;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r468;
	// end inline asm
	mov.b32 	%r469, %f1949;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r469;
	// end inline asm
	mov.b32 	%r470, %f1950;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r470;
	// end inline asm
	.loc	1 1282 27
	shl.b32 	%r555, %r46, 3;
	.loc	1 1282 39
	mad.lo.s32 	%r556, %r539, %r46, %r537;
	add.s32 	%r557, %r556, %r555;
	add.s32 	%r558, %r557, %r555;
	add.s32 	%r559, %r558, %r555;
	add.s32 	%r560, %r559, %r555;
	add.s32 	%r561, %r560, %r555;
	add.s32 	%r562, %r561, %r555;
	add.s32 	%r563, %r562, %r555;
	add.s32 	%r564, %r563, %r555;
	add.s32 	%r565, %r564, %r555;
	add.s32 	%r566, %r565, %r555;
	add.s32 	%r567, %r566, %r555;
	add.s32 	%r568, %r567, %r555;
	add.s32 	%r569, %r568, %r555;
	add.s32 	%r570, %r569, %r555;
	add.s32 	%r571, %r570, %r555;
	.loc	1 1282 13
	mul.wide.s32 	%rd185, %r556, 2;
	add.s64 	%rd169, %rd23, %rd185;
	mul.wide.s32 	%rd186, %r557, 2;
	add.s64 	%rd170, %rd23, %rd186;
	mul.wide.s32 	%rd187, %r558, 2;
	add.s64 	%rd171, %rd23, %rd187;
	mul.wide.s32 	%rd188, %r559, 2;
	add.s64 	%rd172, %rd23, %rd188;
	mul.wide.s32 	%rd189, %r560, 2;
	add.s64 	%rd173, %rd23, %rd189;
	mul.wide.s32 	%rd190, %r561, 2;
	add.s64 	%rd174, %rd23, %rd190;
	mul.wide.s32 	%rd191, %r562, 2;
	add.s64 	%rd175, %rd23, %rd191;
	mul.wide.s32 	%rd192, %r563, 2;
	add.s64 	%rd176, %rd23, %rd192;
	mul.wide.s32 	%rd193, %r564, 2;
	add.s64 	%rd177, %rd23, %rd193;
	mul.wide.s32 	%rd194, %r565, 2;
	add.s64 	%rd178, %rd23, %rd194;
	mul.wide.s32 	%rd195, %r566, 2;
	add.s64 	%rd179, %rd23, %rd195;
	mul.wide.s32 	%rd196, %r567, 2;
	add.s64 	%rd180, %rd23, %rd196;
	mul.wide.s32 	%rd197, %r568, 2;
	add.s64 	%rd181, %rd23, %rd197;
	mul.wide.s32 	%rd198, %r569, 2;
	add.s64 	%rd182, %rd23, %rd198;
	mul.wide.s32 	%rd199, %r570, 2;
	add.s64 	%rd183, %rd23, %rd199;
	mul.wide.s32 	%rd200, %r571, 2;
	add.s64 	%rd184, %rd23, %rd200;
	.loc	1 1283 17
	setp.lt.s32 	%p94, %r539, %r44;
	setp.lt.s32 	%p95, %r554, %r44;
	setp.lt.s32 	%p96, %r553, %r44;
	setp.lt.s32 	%p97, %r552, %r44;
	setp.lt.s32 	%p98, %r551, %r44;
	setp.lt.s32 	%p99, %r550, %r44;
	setp.lt.s32 	%p100, %r549, %r44;
	setp.lt.s32 	%p101, %r548, %r44;
	setp.lt.s32 	%p102, %r547, %r44;
	setp.lt.s32 	%p103, %r546, %r44;
	setp.lt.s32 	%p104, %r545, %r44;
	setp.lt.s32 	%p105, %r544, %r44;
	setp.lt.s32 	%p106, %r543, %r44;
	setp.lt.s32 	%p107, %r542, %r44;
	setp.lt.s32 	%p108, %r541, %r44;
	setp.lt.s32 	%p109, %r540, %r44;
	.loc	1 1283 37
	setp.lt.s32 	%p110, %r537, %r45;
	.loc	1 1283 31
	and.pred  	%p78, %p94, %p110;
	and.pred  	%p79, %p95, %p110;
	and.pred  	%p80, %p96, %p110;
	and.pred  	%p81, %p97, %p110;
	and.pred  	%p82, %p98, %p110;
	and.pred  	%p83, %p99, %p110;
	and.pred  	%p84, %p100, %p110;
	and.pred  	%p85, %p101, %p110;
	and.pred  	%p86, %p102, %p110;
	and.pred  	%p87, %p103, %p110;
	and.pred  	%p88, %p104, %p110;
	and.pred  	%p89, %p105, %p110;
	and.pred  	%p90, %p106, %p110;
	and.pred  	%p91, %p107, %p110;
	and.pred  	%p92, %p108, %p110;
	and.pred  	%p93, %p109, %p110;
	.loc	1 1286 20
	and.b32  	%r572, %r4, 3;
	bfe.u32 	%r573, %r3, 2, 3;
	and.b32  	%r574, %r25, 6;
	shl.b32 	%r575, %r572, 4;
	or.b32  	%r576, %r575, %r573;
	mul.lo.s32 	%r577, %r576, 136;
	or.b32  	%r578, %r577, %r574;
	shl.b32 	%r579, %r578, 1;
	add.s32 	%r581, %r240, %r579;
	mov.b32 	%r582, {%rs1, %rs2};
	st.shared.u32 	[%r581], %r582;
	mov.b32 	%r583, {%rs3, %rs4};
	st.shared.u32 	[%r581+2176], %r583;
	mov.b32 	%r584, {%rs5, %rs6};
	st.shared.u32 	[%r581+16], %r584;
	mov.b32 	%r585, {%rs7, %rs8};
	st.shared.u32 	[%r581+2192], %r585;
	mov.b32 	%r586, {%rs9, %rs10};
	st.shared.u32 	[%r581+32], %r586;
	mov.b32 	%r587, {%rs11, %rs12};
	st.shared.u32 	[%r581+2208], %r587;
	mov.b32 	%r588, {%rs13, %rs14};
	st.shared.u32 	[%r581+48], %r588;
	mov.b32 	%r589, {%rs15, %rs16};
	st.shared.u32 	[%r581+2224], %r589;
	mov.b32 	%r590, {%rs17, %rs18};
	st.shared.u32 	[%r581+64], %r590;
	mov.b32 	%r591, {%rs19, %rs20};
	st.shared.u32 	[%r581+2240], %r591;
	mov.b32 	%r592, {%rs21, %rs22};
	st.shared.u32 	[%r581+80], %r592;
	mov.b32 	%r593, {%rs23, %rs24};
	st.shared.u32 	[%r581+2256], %r593;
	mov.b32 	%r594, {%rs25, %rs26};
	st.shared.u32 	[%r581+96], %r594;
	mov.b32 	%r595, {%rs27, %rs28};
	st.shared.u32 	[%r581+2272], %r595;
	mov.b32 	%r596, {%rs29, %rs30};
	st.shared.u32 	[%r581+112], %r596;
	mov.b32 	%r597, {%rs31, %rs32};
	st.shared.u32 	[%r581+2288], %r597;
	mov.b32 	%r598, {%rs33, %rs34};
	st.shared.u32 	[%r581+128], %r598;
	mov.b32 	%r599, {%rs35, %rs36};
	st.shared.u32 	[%r581+2304], %r599;
	mov.b32 	%r600, {%rs37, %rs38};
	st.shared.u32 	[%r581+144], %r600;
	mov.b32 	%r601, {%rs39, %rs40};
	st.shared.u32 	[%r581+2320], %r601;
	mov.b32 	%r602, {%rs41, %rs42};
	st.shared.u32 	[%r581+160], %r602;
	mov.b32 	%r603, {%rs43, %rs44};
	st.shared.u32 	[%r581+2336], %r603;
	mov.b32 	%r604, {%rs45, %rs46};
	st.shared.u32 	[%r581+176], %r604;
	mov.b32 	%r605, {%rs47, %rs48};
	st.shared.u32 	[%r581+2352], %r605;
	mov.b32 	%r606, {%rs49, %rs50};
	st.shared.u32 	[%r581+192], %r606;
	mov.b32 	%r607, {%rs51, %rs52};
	st.shared.u32 	[%r581+2368], %r607;
	mov.b32 	%r608, {%rs53, %rs54};
	st.shared.u32 	[%r581+208], %r608;
	mov.b32 	%r609, {%rs55, %rs56};
	st.shared.u32 	[%r581+2384], %r609;
	mov.b32 	%r610, {%rs57, %rs58};
	st.shared.u32 	[%r581+224], %r610;
	mov.b32 	%r611, {%rs59, %rs60};
	st.shared.u32 	[%r581+2400], %r611;
	mov.b32 	%r612, {%rs61, %rs62};
	st.shared.u32 	[%r581+240], %r612;
	mov.b32 	%r613, {%rs63, %rs64};
	st.shared.u32 	[%r581+2416], %r613;
	bar.sync 	0;
	bfe.u32 	%r614, %r3, 4, 1;
	shl.b32 	%r615, %r572, 1;
	or.b32  	%r616, %r615, %r614;
	mad.lo.s32 	%r617, %r616, 136, %r536;
	shl.b32 	%r618, %r617, 1;
	add.s32 	%r619, %r240, %r618;
	ld.shared.v4.u32 	{%r471, %r472, %r473, %r474}, [%r619];
	ld.shared.v4.u32 	{%r475, %r476, %r477, %r478}, [%r619+2176];
	ld.shared.v4.u32 	{%r479, %r480, %r481, %r482}, [%r619+4352];
	ld.shared.v4.u32 	{%r483, %r484, %r485, %r486}, [%r619+6528];
	ld.shared.v4.u32 	{%r487, %r488, %r489, %r490}, [%r619+8704];
	ld.shared.v4.u32 	{%r491, %r492, %r493, %r494}, [%r619+10880];
	ld.shared.v4.u32 	{%r495, %r496, %r497, %r498}, [%r619+13056];
	ld.shared.v4.u32 	{%r499, %r500, %r501, %r502}, [%r619+15232];
	bar.sync 	0;
	mov.b32 	%r620, {%rs65, %rs66};
	st.shared.u32 	[%r581], %r620;
	mov.b32 	%r621, {%rs67, %rs68};
	st.shared.u32 	[%r581+2176], %r621;
	mov.b32 	%r622, {%rs69, %rs70};
	st.shared.u32 	[%r581+16], %r622;
	mov.b32 	%r623, {%rs71, %rs72};
	st.shared.u32 	[%r581+2192], %r623;
	mov.b32 	%r624, {%rs73, %rs74};
	st.shared.u32 	[%r581+32], %r624;
	mov.b32 	%r625, {%rs75, %rs76};
	st.shared.u32 	[%r581+2208], %r625;
	mov.b32 	%r626, {%rs77, %rs78};
	st.shared.u32 	[%r581+48], %r626;
	mov.b32 	%r627, {%rs79, %rs80};
	st.shared.u32 	[%r581+2224], %r627;
	mov.b32 	%r628, {%rs81, %rs82};
	st.shared.u32 	[%r581+64], %r628;
	mov.b32 	%r629, {%rs83, %rs84};
	st.shared.u32 	[%r581+2240], %r629;
	mov.b32 	%r630, {%rs85, %rs86};
	st.shared.u32 	[%r581+80], %r630;
	mov.b32 	%r631, {%rs87, %rs88};
	st.shared.u32 	[%r581+2256], %r631;
	mov.b32 	%r632, {%rs89, %rs90};
	st.shared.u32 	[%r581+96], %r632;
	mov.b32 	%r633, {%rs91, %rs92};
	st.shared.u32 	[%r581+2272], %r633;
	mov.b32 	%r634, {%rs93, %rs94};
	st.shared.u32 	[%r581+112], %r634;
	mov.b32 	%r635, {%rs95, %rs96};
	st.shared.u32 	[%r581+2288], %r635;
	mov.b32 	%r636, {%rs97, %rs98};
	st.shared.u32 	[%r581+128], %r636;
	mov.b32 	%r637, {%rs99, %rs100};
	st.shared.u32 	[%r581+2304], %r637;
	mov.b32 	%r638, {%rs101, %rs102};
	st.shared.u32 	[%r581+144], %r638;
	mov.b32 	%r639, {%rs103, %rs104};
	st.shared.u32 	[%r581+2320], %r639;
	mov.b32 	%r640, {%rs105, %rs106};
	st.shared.u32 	[%r581+160], %r640;
	mov.b32 	%r641, {%rs107, %rs108};
	st.shared.u32 	[%r581+2336], %r641;
	mov.b32 	%r642, {%rs109, %rs110};
	st.shared.u32 	[%r581+176], %r642;
	mov.b32 	%r643, {%rs111, %rs112};
	st.shared.u32 	[%r581+2352], %r643;
	mov.b32 	%r644, {%rs113, %rs114};
	st.shared.u32 	[%r581+192], %r644;
	mov.b32 	%r645, {%rs115, %rs116};
	st.shared.u32 	[%r581+2368], %r645;
	mov.b32 	%r646, {%rs117, %rs118};
	st.shared.u32 	[%r581+208], %r646;
	mov.b32 	%r647, {%rs119, %rs120};
	st.shared.u32 	[%r581+2384], %r647;
	mov.b32 	%r648, {%rs121, %rs122};
	st.shared.u32 	[%r581+224], %r648;
	mov.b32 	%r649, {%rs123, %rs124};
	st.shared.u32 	[%r581+2400], %r649;
	mov.b32 	%r650, {%rs125, %rs126};
	st.shared.u32 	[%r581+240], %r650;
	mov.b32 	%r651, {%rs127, %rs128};
	st.shared.u32 	[%r581+2416], %r651;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r503, %r504, %r505, %r506}, [%r619];
	ld.shared.v4.u32 	{%r507, %r508, %r509, %r510}, [%r619+2176];
	ld.shared.v4.u32 	{%r511, %r512, %r513, %r514}, [%r619+4352];
	ld.shared.v4.u32 	{%r515, %r516, %r517, %r518}, [%r619+6528];
	ld.shared.v4.u32 	{%r519, %r520, %r521, %r522}, [%r619+8704];
	ld.shared.v4.u32 	{%r523, %r524, %r525, %r526}, [%r619+10880];
	ld.shared.v4.u32 	{%r527, %r528, %r529, %r530}, [%r619+13056];
	ld.shared.v4.u32 	{%r531, %r532, %r533, %r534}, [%r619+15232];
	// begin inline asm
	@%p78 st.global.v4.b32 [ %rd169 + 0 ], { %r471, %r472, %r473, %r474 };
	// end inline asm
	// begin inline asm
	@%p79 st.global.v4.b32 [ %rd170 + 0 ], { %r475, %r476, %r477, %r478 };
	// end inline asm
	// begin inline asm
	@%p80 st.global.v4.b32 [ %rd171 + 0 ], { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	@%p81 st.global.v4.b32 [ %rd172 + 0 ], { %r483, %r484, %r485, %r486 };
	// end inline asm
	// begin inline asm
	@%p82 st.global.v4.b32 [ %rd173 + 0 ], { %r487, %r488, %r489, %r490 };
	// end inline asm
	// begin inline asm
	@%p83 st.global.v4.b32 [ %rd174 + 0 ], { %r491, %r492, %r493, %r494 };
	// end inline asm
	// begin inline asm
	@%p84 st.global.v4.b32 [ %rd175 + 0 ], { %r495, %r496, %r497, %r498 };
	// end inline asm
	// begin inline asm
	@%p85 st.global.v4.b32 [ %rd176 + 0 ], { %r499, %r500, %r501, %r502 };
	// end inline asm
	// begin inline asm
	@%p86 st.global.v4.b32 [ %rd177 + 0 ], { %r503, %r504, %r505, %r506 };
	// end inline asm
	// begin inline asm
	@%p87 st.global.v4.b32 [ %rd178 + 0 ], { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	@%p88 st.global.v4.b32 [ %rd179 + 0 ], { %r511, %r512, %r513, %r514 };
	// end inline asm
	// begin inline asm
	@%p89 st.global.v4.b32 [ %rd180 + 0 ], { %r515, %r516, %r517, %r518 };
	// end inline asm
	// begin inline asm
	@%p90 st.global.v4.b32 [ %rd181 + 0 ], { %r519, %r520, %r521, %r522 };
	// end inline asm
	// begin inline asm
	@%p91 st.global.v4.b32 [ %rd182 + 0 ], { %r523, %r524, %r525, %r526 };
	// end inline asm
	// begin inline asm
	@%p92 st.global.v4.b32 [ %rd183 + 0 ], { %r527, %r528, %r529, %r530 };
	// end inline asm
	// begin inline asm
	@%p93 st.global.v4.b32 [ %rd184 + 0 ], { %r531, %r532, %r533, %r534 };
	// end inline asm
	.loc	1 1285 4
	ret;
$L__tmp6:
$L__func_end0:

}
	.file	1 "/data/users/mren/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py"
	.file	2 "/data/users/mren/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 5
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 390
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 102
.b8 112
.b8 56
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 100
.b8 97
.b8 116
.b8 97
.b8 47
.b8 117
.b8 115
.b8 101
.b8 114
.b8 115
.b8 47
.b8 109
.b8 114
.b8 101
.b8 110
.b8 47
.b8 102
.b8 98
.b8 115
.b8 111
.b8 117
.b8 114
.b8 99
.b8 101
.b8 47
.b8 98
.b8 117
.b8 99
.b8 107
.b8 45
.b8 111
.b8 117
.b8 116
.b8 47
.b8 118
.b8 50
.b8 47
.b8 103
.b8 101
.b8 110
.b8 47
.b8 102
.b8 98
.b8 99
.b8 111
.b8 100
.b8 101
.b8 47
.b8 102
.b8 49
.b8 99
.b8 56
.b8 51
.b8 52
.b8 100
.b8 100
.b8 48
.b8 98
.b8 101
.b8 99
.b8 97
.b8 101
.b8 100
.b8 54
.b8 47
.b8 100
.b8 101
.b8 101
.b8 112
.b8 108
.b8 101
.b8 97
.b8 114
.b8 110
.b8 105
.b8 110
.b8 103
.b8 47
.b8 102
.b8 98
.b8 103
.b8 101
.b8 109
.b8 109
.b8 47
.b8 102
.b8 98
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 103
.b8 112
.b8 117
.b8 47
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 97
.b8 108
.b8 47
.b8 103
.b8 101
.b8 110
.b8 95
.b8 97
.b8 105
.b8 47
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 95
.b8 95
.b8 113
.b8 117
.b8 97
.b8 110
.b8 116
.b8 105
.b8 122
.b8 101
.b8 95
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 95
.b8 95
.b8 47
.b8 113
.b8 117
.b8 97
.b8 110
.b8 116
.b8 105
.b8 122
.b8 101
.b8 95
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 35
.b8 108
.b8 105
.b8 110
.b8 107
.b8 45
.b8 116
.b8 114
.b8 101
.b8 101
.b8 47
.b8 102
.b8 98
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 103
.b8 112
.b8 117
.b8 47
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 97
.b8 108
.b8 47
.b8 103
.b8 101
.b8 109
.b8 109
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 102
.b8 112
.b8 56
.b8 95
.b8 98
.b8 108
.b8 111
.b8 99
.b8 107
.b8 95
.b8 102
.b8 97
.b8 115
.b8 116
.b8 97
.b8 99
.b8 99
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 261
.b8 4
.b32 261
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 177
.b8 4
.b8 24
.b8 4
.b32 261
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 178
.b8 4
.b8 24
.b8 4
.b32 261
.b64 $L__tmp4
.b64 $L__tmp5
.b8 1
.b8 200
.b8 4
.b8 33
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
