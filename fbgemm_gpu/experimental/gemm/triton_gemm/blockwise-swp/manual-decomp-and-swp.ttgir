#blocked = #triton_gpu.blocked<{sizePerThread = [16, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 16], threadsPerWarp = [4, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0)
#mma = #triton_gpu.nvidia_mma<{versionMajor = 3, versionMinor = 0, warpsPerCTA = [4, 1], instrShape = [16, 128, 32]}>
#shared = #triton_gpu.shared<{vec = 16, perPhase = 1, maxPhase = 8, order = [1, 0], hasLeadingOffset = true}>
#shared1 = #triton_gpu.shared<{vec = 16, perPhase = 1, maxPhase = 8, order = [0, 1], hasLeadingOffset = true}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @_kernel_matmul_fp8_block_fastacc(%arg0: !tt.ptr<f8E4M3FNUZ> {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg1: !tt.ptr<f8E4M3FNUZ> {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg6: i32 loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1061:0)) attributes {noinline = false} {
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %cst = arith.constant dense<128> : tensor<128x128xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<128x128xi32, #blocked1> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c127_i32 = arith.constant 127 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64x128xf32, #mma> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.addi %arg3, %c127_i32 : i32 loc(#loc79)
    %3 = arith.divsi %2, %c128_i32 : i32 loc(#loc80)
    %4 = arith.addi %arg4, %c127_i32 : i32 loc(#loc81)
    %5 = arith.divsi %4, %c128_i32 : i32 loc(#loc82)
    %6 = arith.muli %5, %c8_i32 : i32 loc(#loc8)
    %7 = arith.divsi %0, %6 : i32 loc(#loc9)
    %8 = arith.muli %7, %c8_i32 : i32 loc(#loc10)
    %9 = arith.subi %3, %8 : i32 loc(#loc11)
    %10 = arith.minsi %9, %c8_i32 : i32 loc(#loc12)
    %11 = arith.remsi %0, %10 : i32 loc(#loc13)
    %12 = arith.addi %8, %11 : i32 loc(#loc14)
    %13 = arith.remsi %0, %6 : i32 loc(#loc15)
    %14 = arith.divsi %13, %10 : i32 loc(#loc16)
    %15 = arith.muli %12, %c128_i32 : i32 loc(#loc17)
    %16 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc18)
    %17 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc18)
    %18 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc18)
    %19 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc18)
    %20 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc18)
    %21 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc18)
    %22 = tt.splat %15 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc19)
    %23 = tt.splat %15 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc19)
    %24 = arith.addi %22, %16 : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc19)
    %25 = arith.addi %23, %18 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc19)
    %26 = arith.muli %14, %c128_i32 : i32 loc(#loc20)
    %27 = tt.splat %26 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc21)
    %28 = tt.splat %26 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc21)
    %29 = arith.addi %27, %20 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc21)
    %30 = arith.addi %28, %21 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc21)
    %31 = tt.splat %arg3 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc22)
    %32 = tt.splat %arg3 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc22)
    %33 = arith.remsi %24, %31 {tt.contiguity = dense<128> : tensor<1xi32>, tt.divisibility = dense<128> : tensor<1xi32>} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc22)
    %34 = tt.splat %arg4 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc23)
    %35 = tt.splat %arg4 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc23)
    %36 = arith.remsi %29, %34 {tt.contiguity = dense<128> : tensor<1xi32>, tt.divisibility = dense<128> : tensor<1xi32>} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc23)
    %37 = arith.muli %1, %c128_i32 : i32 loc(#loc24)
    %38 = tt.splat %37 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc25)
    %39 = tt.splat %37 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc25)
    %40 = arith.addi %38, %19 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc25)
    %41 = arith.addi %39, %17 : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc25)
    %42 = tt.expand_dims %33 {axis = 1 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<128x1xi32, #blocked1> loc(#loc26)
    %43 = tt.splat %arg11 : i32 -> tensor<128x1xi32, #blocked1> loc(#loc27)
    %44 = arith.muli %42, %43 : tensor<128x1xi32, #blocked1> loc(#loc27)
    %45 = tt.expand_dims %40 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x128xi32, #blocked1> loc(#loc28)
    %46 = tt.broadcast %44 : tensor<128x1xi32, #blocked1> -> tensor<128x128xi32, #blocked1> loc(#loc29)
    %47 = tt.broadcast %45 : tensor<1x128xi32, #blocked1> -> tensor<128x128xi32, #blocked1> loc(#loc29)
    %48 = arith.addi %46, %47 : tensor<128x128xi32, #blocked1> loc(#loc29)
    %49 = tt.splat %arg0 : !tt.ptr<f8E4M3FNUZ> -> tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1> loc(#loc30)
    %50 = tt.addptr %49, %48 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1>, tensor<128x128xi32, #blocked1> loc(#loc30)
    %51 = tt.expand_dims %41 {axis = 1 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi32, #blocked> loc(#loc31)
    %52 = tt.expand_dims %36 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc32)
    %53 = tt.splat %arg12 : i32 -> tensor<1x128xi32, #blocked> loc(#loc33)
    %54 = arith.muli %52, %53 : tensor<1x128xi32, #blocked> loc(#loc33)
    %55 = tt.broadcast %51 : tensor<128x1xi32, #blocked> -> tensor<128x128xi32, #blocked> loc(#loc34)
    %56 = tt.broadcast %54 : tensor<1x128xi32, #blocked> -> tensor<128x128xi32, #blocked> loc(#loc34)
    %57 = arith.addi %55, %56 : tensor<128x128xi32, #blocked> loc(#loc34)
    %58 = tt.splat %arg1 : !tt.ptr<f8E4M3FNUZ> -> tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked> loc(#loc35)
    %59 = tt.addptr %58, %57 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked>, tensor<128x128xi32, #blocked> loc(#loc35)
    %60 = arith.divsi %15, %c128_i32 : i32 loc(#loc36)
    %61 = arith.divsi %26, %c128_i32 : i32 loc(#loc37)
    %62 = arith.addi %arg5, %c127_i32 : i32 loc(#loc83)
    %63 = arith.divsi %62, %c128_i32 : i32 loc(#loc84)
    %64 = arith.muli %60, %arg14 : i32 loc(#loc39)
    %65 = tt.addptr %arg9, %64 : !tt.ptr<f32>, i32 loc(#loc40)
    %66 = arith.muli %61, %arg15 : i32 loc(#loc41)
    %67 = tt.addptr %arg10, %66 : !tt.ptr<f32>, i32 loc(#loc42)
    %68 = triton_gpu.local_alloc  : () -> !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %69 = triton_gpu.local_alloc  : () -> !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %70 = arith.cmpi sgt, %63, %c0_i32 : i32 loc(#loc45)
    %71 = triton_gpu.memdesc_subview %68[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %72 = tt.splat %70 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc45)
    %73 = triton_gpu.async_copy_global_to_local %50, %71 mask %72 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1> -> <128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %74 = triton_gpu.async_commit_group %73 loc(#loc43)
    %75 = triton_gpu.memdesc_subview %69[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %76 = tt.splat %70 : i1 -> tensor<128x128xi1, #blocked> loc(#loc45)
    %77 = triton_gpu.async_copy_global_to_local %59, %75 mask %76 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked> -> <128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %78 = triton_gpu.async_commit_group %77 loc(#loc44)
    %79 = arith.cmpi sgt, %63, %c1_i32 : i32 loc(#loc45)
    %80 = tt.addptr %50, %cst_0 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1>, tensor<128x128xi32, #blocked1> loc(#loc46)
    %81 = tt.addptr %59, %cst : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked>, tensor<128x128xi32, #blocked> loc(#loc47)
    %82 = triton_gpu.memdesc_subview %68[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %83 = tt.splat %79 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc45)
    %84 = triton_gpu.async_copy_global_to_local %80, %82 mask %83 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1> -> <128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %85 = triton_gpu.async_commit_group %84 loc(#loc43)
    %86 = triton_gpu.memdesc_subview %69[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %87 = tt.splat %79 : i1 -> tensor<128x128xi1, #blocked> loc(#loc45)
    %88 = triton_gpu.async_copy_global_to_local %81, %86 mask %87 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked> -> <128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %89 = triton_gpu.async_commit_group %88 loc(#loc44)
    %90 = arith.cmpi sgt, %63, %c2_i32 : i32 loc(#loc45)
    %91 = tt.addptr %80, %cst_0 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1>, tensor<128x128xi32, #blocked1> loc(#loc46)
    %92 = tt.addptr %81, %cst : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked>, tensor<128x128xi32, #blocked> loc(#loc47)
    %93 = triton_gpu.memdesc_subview %68[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %94 = tt.splat %90 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc45)
    %95 = triton_gpu.async_copy_global_to_local %91, %93 mask %94 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1> -> <128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %96 = triton_gpu.async_commit_group %95 loc(#loc43)
    %97 = triton_gpu.memdesc_subview %69[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %98 = tt.splat %90 : i1 -> tensor<128x128xi1, #blocked> loc(#loc45)
    %99 = triton_gpu.async_copy_global_to_local %92, %97 mask %98 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked> -> <128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %100 = triton_gpu.async_commit_group %99 loc(#loc44)

    // Prolog
    %1210 = arith.subi %63, %c3_i32 : i32 loc(#loc45)
    %1220 = arith.cmpi slt, %c0_i32, %1210 : i32 loc(#loc45)
    %1230 = arith.addi %c-1_i32, %c1_i32 : i32 loc(#loc45)
    %1240 = arith.cmpi slt, %1230, %c4_i32 : i32 loc(#loc45)
    %1250 = arith.select %1240, %1230, %c0_i32 : i32 loc(#loc45)
    %12600 = triton_gpu.memdesc_subview %68[%1250, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %126000 = triton_gpu.memdesc_subview %68[%1250, %c64_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %1270 = triton_gpu.async_wait %78 {num = 4 : i32} loc(#loc43)
    %1280 = triton_gpu.memdesc_subview %69[%1250, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %12900 = triton_nvidia_gpu.dot_async %12600, %1280, %cst_1 {inputPrecision = 0 : i32, maxNumImpreciseAcc = 1073741824 : i32} : !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> * !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> -> tensor<64x128xf32, #mma> loc(#loc48)
    %13000:3 = triton_nvidia_gpu.dot_wait %12900, %12600, %1280 {pendings = 0 : i32} : tensor<64x128xf32, #mma>, !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable>, !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc48)
    %1310 = arith.addi %c0_i32, %1 : i32 loc(#loc49)
    %1320 = arith.addi %1310, %c1_i32 : i32 loc(#loc50)
    %1330 = tt.addptr %65, %1310 : !tt.ptr<f32>, i32 loc(#loc51)
    %1340 = tt.load %1330 : !tt.ptr<f32> loc(#loc52)
    %1350 = tt.addptr %67, %1310 : !tt.ptr<f32>, i32 loc(#loc53)
    %1360 = tt.load %1350 : !tt.ptr<f32> loc(#loc54)
    %1370 = arith.mulf %1340, %1360 : f32 loc(#loc55)
    %1380 = arith.addi %c0_i32, %c1_i32 : i32 loc(#loc56)
    %1390 = arith.cmpi eq, %1380, %63 : i32 loc(#loc57)
    %1400 = scf.if %1390 -> (f32) {
      scf.yield %1370 : f32 loc(#loc1)
    } else {
      %1560 = tt.addptr %65, %1320 : !tt.ptr<f32>, i32 loc(#loc59)
      %1570 = tt.load %1560 : !tt.ptr<f32> loc(#loc60)
      %1580 = tt.addptr %67, %1320 : !tt.ptr<f32>, i32 loc(#loc61)
      %1590 = tt.load %1580 : !tt.ptr<f32> loc(#loc62)
      %1600 = arith.mulf %1570, %1590 : f32 loc(#loc63)
      %1610 = arith.divf %1370, %1600 : f32 loc(#loc64)
      scf.yield %1610 : f32 loc(#loc64)
    } loc(#loc58)
    %1410 = tt.splat %1400 : f32 -> tensor<64x128xf32, #mma> loc(#loc65)
    %14200 = arith.mulf %13000#0, %1410 : tensor<64x128xf32, #mma> loc(#loc65)
    %129000 = triton_nvidia_gpu.dot_async %126000, %1280, %cst_1 {inputPrecision = 0 : i32, maxNumImpreciseAcc = 1073741824 : i32} : !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> * !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> -> tensor<64x128xf32, #mma> loc(#loc48)
    %130000:3 = triton_nvidia_gpu.dot_wait %129000, %126000, %1280 {pendings = 1 : i32} : tensor<64x128xf32, #mma>, !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable>, !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc48)
    %1430 = tt.addptr %91, %cst_0 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1>, tensor<128x128xi32, #blocked1> loc(#loc46)
    %1440 = tt.addptr %92, %cst : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked>, tensor<128x128xi32, #blocked> loc(#loc47)
    %1450 = arith.addi %c2_i32, %c1_i32 : i32 loc(#loc45)
    %1460 = arith.cmpi slt, %1450, %c4_i32 : i32 loc(#loc45)
    %1470 = arith.select %1460, %1450, %c0_i32 : i32 loc(#loc45)
    %1480 = triton_gpu.memdesc_subview %68[%1470, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %1490 = tt.splat %1220 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc45)
    %1500 = triton_gpu.async_copy_global_to_local %1430, %1480 mask %1490 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1> -> <128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
    %1510 = triton_gpu.async_commit_group %1500 loc(#loc43)
    %1520 = triton_gpu.memdesc_subview %69[%1470, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %1530 = tt.splat %1220 : i1 -> tensor<128x128xi1, #blocked> loc(#loc45)
    %1540 = triton_gpu.async_copy_global_to_local %1440, %1520 mask %1530 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked> -> <128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
    %1550 = triton_gpu.async_commit_group %1540 loc(#loc44)



    %101:10 = scf.for %arg16 = %c1_i32 to %63 step %c1_i32 iter_args(%arg17 = %14200, %arg170 = %130000#0, %arg18 = %1430, %arg19 = %1440, %arg20 = %1470, %arg21 = %1250, %arg22 = %1510, %arg23 = %100, %arg24 = %1550, %arg25 = %1400) -> (tensor<64x128xf32, #mma>, tensor<64x128xf32, #mma>, tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1>, tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked>, i32, i32, !triton_gpu.async.token, !triton_gpu.async.token, !triton_gpu.async.token, f32)  : i32 {
      %121 = arith.subi %63, %c3_i32 : i32 loc(#loc45)
      %122 = arith.cmpi slt, %arg16, %121 : i32 loc(#loc45)
      %123 = arith.addi %arg21, %c1_i32 : i32 loc(#loc45)
      %124 = arith.cmpi slt, %123, %c4_i32 : i32 loc(#loc45)
      %125 = arith.select %124, %123, %c0_i32 : i32 loc(#loc45)
      %126 = triton_gpu.memdesc_subview %68[%125, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
      %1260 = triton_gpu.memdesc_subview %68[%125, %c64_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
      %127 = triton_gpu.async_wait %arg22 {num = 4 : i32} loc(#loc43)
      %128 = triton_gpu.memdesc_subview %69[%125, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
      %129 = triton_nvidia_gpu.dot_async %126, %128, %arg17 {inputPrecision = 0 : i32, maxNumImpreciseAcc = 1073741824 : i32} : !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> * !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> -> tensor<64x128xf32, #mma> loc(#loc48)
      %130:3 = triton_nvidia_gpu.dot_wait %129, %126, %128 {pendings = 1 : i32} : tensor<64x128xf32, #mma>, !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable>, !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc48)
      %131 = arith.addi %arg16, %1 : i32 loc(#loc49)
      %132 = arith.addi %131, %c1_i32 : i32 loc(#loc50)
      %133 = tt.addptr %65, %131 : !tt.ptr<f32>, i32 loc(#loc51)
      %134 = tt.load %133 : !tt.ptr<f32> loc(#loc52)
      %135 = tt.addptr %67, %131 : !tt.ptr<f32>, i32 loc(#loc53)
      %136 = tt.load %135 : !tt.ptr<f32> loc(#loc54)
      %137 = arith.mulf %134, %136 : f32 loc(#loc55)
      %138 = arith.addi %arg16, %c1_i32 : i32 loc(#loc56)
      %139 = arith.cmpi eq, %138, %63 : i32 loc(#loc57)

      // FMUL for MMA 1
      %14100 = tt.splat %arg25 : f32 -> tensor<64x128xf32, #mma> loc(#loc65)
      %1420 = arith.mulf %arg170, %14100 : tensor<64x128xf32, #mma> loc(#loc65)

      // MMA1
      %1290 = triton_nvidia_gpu.dot_async %1260, %128, %1420 {inputPrecision = 0 : i32, maxNumImpreciseAcc = 1073741824 : i32} : !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable> * !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> -> tensor<64x128xf32, #mma> loc(#loc48)
      %1300:3 = triton_nvidia_gpu.dot_wait %1290, %1260, %128 {pendings = 1 : i32} : tensor<64x128xf32, #mma>, !tt.memdesc<64x128xf8E4M3FNUZ, #shared, mutable>, !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc48)

      // FMUL for MMA 0
      %140 = scf.if %139 -> (f32) {
        scf.yield %137 : f32 loc(#loc1)
      } else {
        %156 = tt.addptr %65, %132 : !tt.ptr<f32>, i32 loc(#loc59)
        %157 = tt.load %156 : !tt.ptr<f32> loc(#loc60)
        %158 = tt.addptr %67, %132 : !tt.ptr<f32>, i32 loc(#loc61)
        %159 = tt.load %158 : !tt.ptr<f32> loc(#loc62)
        %160 = arith.mulf %157, %159 : f32 loc(#loc63)
        %161 = arith.divf %137, %160 : f32 loc(#loc64)
        scf.yield %161 : f32 loc(#loc64)
      } loc(#loc58)
      %141 = tt.splat %140 : f32 -> tensor<64x128xf32, #mma> loc(#loc65)
      %142 = arith.mulf %130#0, %141 : tensor<64x128xf32, #mma> loc(#loc65)

      %143 = tt.addptr %arg18, %cst_0 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1>, tensor<128x128xi32, #blocked1> loc(#loc46)
      %144 = tt.addptr %arg19, %cst : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked>, tensor<128x128xi32, #blocked> loc(#loc47)
      %145 = arith.addi %arg20, %c1_i32 : i32 loc(#loc45)
      %146 = arith.cmpi slt, %145, %c4_i32 : i32 loc(#loc45)
      %147 = arith.select %146, %145, %c0_i32 : i32 loc(#loc45)
      %148 = triton_gpu.memdesc_subview %68[%147, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
      %149 = tt.splat %122 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc45)
      %150 = triton_gpu.async_copy_global_to_local %143, %148 mask %149 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1> -> <128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc43)
      %151 = triton_gpu.async_commit_group %150 loc(#loc43)
      %152 = triton_gpu.memdesc_subview %69[%147, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> -> !tt.memdesc<128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
      %153 = tt.splat %122 : i1 -> tensor<128x128xi1, #blocked> loc(#loc45)
      %154 = triton_gpu.async_copy_global_to_local %144, %152 mask %153 : tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked> -> <128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc44)
      %155 = triton_gpu.async_commit_group %154 loc(#loc44)
      scf.yield %142, %1300#0, %143, %144, %147, %125, %arg23, %arg24, %155, %140 : tensor<64x128xf32, #mma>, tensor<64x128xf32, #mma>, tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked1>, tensor<128x128x!tt.ptr<f8E4M3FNUZ>, #blocked>, i32, i32, !triton_gpu.async.token, !triton_gpu.async.token, !triton_gpu.async.token, f32 loc(#loc45)
    } loc(#loc45)
    %102 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc45)

    // Epilog
    %14100 = tt.splat %101#9 : f32 -> tensor<64x128xf32, #mma> loc(#loc65)
    %142000 = arith.mulf %101#1, %14100 : tensor<64x128xf32, #mma> loc(#loc65)


    triton_gpu.local_dealloc %68 : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared, mutable> loc(#loc45)
    triton_gpu.local_dealloc %69 : !tt.memdesc<4x128x128xf8E4M3FNUZ, #shared1, mutable> loc(#loc45)
    %103 = arith.truncf %101#0 : tensor<64x128xf32, #mma> to tensor<64x128xbf16, #mma> loc(#loc66)
    %1030 = arith.truncf %142000 : tensor<64x128xf32, #mma> to tensor<64x128xbf16, #mma> loc(#loc66)
    %104 = tt.expand_dims %25 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1xi32, #blocked2> loc(#loc67)
    %105 = tt.splat %arg13 : i32 -> tensor<64x1xi32, #blocked2> loc(#loc68)
    %106 = arith.muli %104, %105 : tensor<64x1xi32, #blocked2> loc(#loc68)
    %107 = tt.expand_dims %30 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x128xi32, #blocked2> loc(#loc69)
    %108 = tt.broadcast %106 : tensor<64x1xi32, #blocked2> -> tensor<64x128xi32, #blocked2> loc(#loc70)
    %109 = tt.broadcast %107 : tensor<1x128xi32, #blocked2> -> tensor<64x128xi32, #blocked2> loc(#loc70)
    %110 = arith.addi %108, %109 : tensor<64x128xi32, #blocked2> loc(#loc70)
    %111 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x128x!tt.ptr<bf16>, #blocked2> loc(#loc71)
    %112 = tt.addptr %111, %110 : tensor<64x128x!tt.ptr<bf16>, #blocked2>, tensor<64x128xi32, #blocked2> loc(#loc71)
    %180 = tt.make_range {end = 128 : i32, start = 64 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc18)
    %250 = arith.addi %23, %180 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc19)
    %1040 = tt.expand_dims %250 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1xi32, #blocked2> loc(#loc67)
    %1060 = arith.muli %1040, %105 : tensor<64x1xi32, #blocked2> loc(#loc68)
    %1080 = tt.broadcast %1060 : tensor<64x1xi32, #blocked2> -> tensor<64x128xi32, #blocked2> loc(#loc70)
    %1100 = arith.addi %1080, %109 : tensor<64x128xi32, #blocked2> loc(#loc70)
    %1120 = tt.addptr %111, %1100 : tensor<64x128x!tt.ptr<bf16>, #blocked2>, tensor<64x128xi32, #blocked2> loc(#loc71)
    %113 = arith.cmpi slt, %25, %32 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc72)
    %114 = tt.expand_dims %113 {axis = 1 : i32} : tensor<64xi1, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1xi1, #blocked2> loc(#loc73)
    %115 = arith.cmpi slt, %30, %35 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc74)
    %116 = tt.expand_dims %115 {axis = 0 : i32} : tensor<128xi1, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x128xi1, #blocked2> loc(#loc75)
    %117 = tt.broadcast %114 : tensor<64x1xi1, #blocked2> -> tensor<64x128xi1, #blocked2> loc(#loc76)
    %118 = tt.broadcast %116 : tensor<1x128xi1, #blocked2> -> tensor<64x128xi1, #blocked2> loc(#loc76)
    %119 = arith.andi %117, %118 : tensor<64x128xi1, #blocked2> loc(#loc76)
    %120 = triton_gpu.convert_layout %103 : tensor<64x128xbf16, #mma> -> tensor<64x128xbf16, #blocked2> loc(#loc77)
    %1200 = triton_gpu.convert_layout %1030 : tensor<64x128xbf16, #mma> -> tensor<64x128xbf16, #blocked2> loc(#loc77)
    tt.store %112, %120, %119 : tensor<64x128x!tt.ptr<bf16>, #blocked2> loc(#loc77)

    %1130 = arith.cmpi slt, %250, %32 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>>
    %1140 = tt.expand_dims %1130 {axis = 1 : i32} : tensor<64xi1, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1xi1, #blocked2>
    %1170 = tt.broadcast %1140 : tensor<64x1xi1, #blocked2> -> tensor<64x128xi1, #blocked2>
    %1190 = arith.andi %1170, %118 : tensor<64x128xi1, #blocked2>
    tt.store %1120, %1200, %1190 : tensor<64x128x!tt.ptr<bf16>, #blocked2> loc(#loc77)
    tt.return loc(#loc78)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1145:24)
#loc3 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1146:26)
#loc4 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/triton/language/standard.py":44:22)
#loc5 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1148:24)
#loc6 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/triton/language/standard.py":44:28)
#loc7 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1149:24)
#loc8 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1151:22)
#loc9 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1152:22)
#loc10 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1153:41)
#loc11 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1153:30)
#loc12 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1153:50)
#loc13 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1154:40)
#loc14 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1154:34)
#loc15 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1155:19)
#loc16 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1155:30)
#loc17 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1157:17)
#loc18 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1157:40)
#loc19 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1157:27)
#loc20 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1158:17)
#loc21 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1158:27)
#loc22 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1159:48)
#loc23 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1160:48)
#loc24 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1161:17)
#loc25 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1161:27)
#loc26 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1163:17)
#loc27 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1163:28)
#loc28 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1163:43)
#loc29 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1163:40)
#loc30 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1163:13)
#loc31 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1164:16)
#loc32 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1164:43)
#loc33 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1164:54)
#loc34 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1164:39)
#loc35 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1164:13)
#loc36 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1167:33)
#loc37 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1168:33)
#loc38 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1171:33)
#loc39 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1205:36)
#loc40 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1205:26)
#loc41 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1208:36)
#loc42 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1208:26)
#loc43 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1174:24)
#loc44 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1175:24)
#loc45 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1171:22)
#loc46 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1187:13)
#loc47 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1188:13)
#loc48 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1185:27)
#loc49 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1196:30)
#loc50 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1203:37)
#loc51 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1205:54)
#loc52 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1205:16)
#loc53 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1208:54)
#loc54 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1208:16)
#loc55 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1210:30)
#loc56 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1211:19)
#loc57 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1211:24)
#loc58 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1211:15)
#loc59 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1215:58)
#loc60 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1215:20)
#loc61 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1218:58)
#loc62 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1218:20)
#loc63 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1220:44)
#loc64 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1221:47)
#loc65 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1222:19)
#loc66 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1228:17)
#loc67 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1229:16)
#loc68 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1229:27)
#loc69 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1229:42)
#loc70 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1229:39)
#loc71 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1229:13)
#loc72 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1230:17)
#loc73 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1230:20)
#loc74 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1230:37)
#loc75 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1230:40)
#loc76 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1230:31)
#loc77 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1233:20)
#loc78 = loc("/home/hoy/local/fbsource/buck-out/v2/gen/fbcode/f1c834dd0becaed6/deeplearning/fbgemm/fbgemm_gpu/experimental/gen_ai/bench/__quantize_bench__/quantize_bench#link-tree/fbgemm_gpu/experimental/gemm/triton_gemm/fp8_gemm.py":1232:4)
#loc79 = loc(callsite(#loc4 at #loc5))
#loc80 = loc(callsite(#loc6 at #loc5))
#loc81 = loc(callsite(#loc4 at #loc7))
#loc82 = loc(callsite(#loc6 at #loc7))
#loc83 = loc(callsite(#loc4 at #loc38))
#loc84 = loc(callsite(#loc6 at #loc38))
